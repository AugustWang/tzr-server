-record(p_game_role_disply, {type=1,value}).
-record(p_chat_role, {roleid,rolename,factionid,faction_name,sex,head,sign,titles}).
-record(p_chat_title, {id,name,color="#ffffff"}).
-record(p_title, {id,name,type,auto_timeout,timeout_time,role_id,show_in_chat,show_in_sence,color}).
-record(p_chat_channel_role_info, {channel_sign,channel_type,role_id,role_name,sex,faction_id,office_name,head,sign,is_online}).
-record(p_channel_info, {channel_sign,channel_type,channel_name,online_num=1,total_num=1}).
-record(p_actor_buf, {buff_id,remain_time,actor_id,actor_type,from_actor_id,from_actor_type,start_time,end_time,buff_type,value}).
-record(p_skin, {skinid,hair_type=1,hair_color,weapon=0,clothes=0,mounts=0,assis_weapon=0,fashion=0,light_code=0}).
-record(p_role_base, {role_id,role_name,account_name,sex,create_time,status=0,head,faction_id,team_id=0,family_id=0,family_name="",max_hp,max_mp,str,int2,con,dex,men,base_str=0,base_int=0,base_con=0,base_dex=0,base_men=0,remain_attr_points,pk_title,max_phy_attack,min_phy_attack,max_magic_attack,min_magic_attack,phy_defence,magic_defence,hp_recover_speed,mp_recover_speed,luck,move_speed,attack_speed,erupt_attack_rate,no_defence=0,miss=0,double_attack=0,phy_anti=0,magic_anti=0,cur_title,cur_title_color,pk_mode=0,pk_points=0,last_gray_name=0,if_gray_name=false,weapon_type=0,buffs,phy_hurt_rate=0,magic_hurt_rate=0,disable_menu,dizzy=0,poisoning=0,freeze=0,hurt=0,poisoning_resist=0,dizzy_resist=0,freeze_resist=0,hurt_rebound=0,achievement=0,equip_score=0,spec_score_one=0,spec_score_two=0,hit_rate=10000,account_type=0}).
-record(p_role_pos, {role_id,map_id,pos,map_process_name,old_map_process_name}).
-record(p_role_fight, {role_id,hp,mp,energy,energy_remain,time_reset_energy}).
-record(p_role_attr, {role_id,role_name,next_level_exp,exp,level,five_ele_attr,last_login_location,equips,jungong=0,charm=0,couple_id=0,couple_name="",skin,cur_energy=2000,max_energy=2000,remain_skill_points=0,gold=0,gold_bind=0,silver=0,silver_bind=0,show_cloth=true,moral_values=0,gongxun=0,last_login_ip="",office_id=0,office_name="",unbund=false,family_contribute=0,active_points=0,category,show_equip_ring=true,is_payed=false,sum_prestige=0,cur_prestige=0}).
-record(p_role_ext, {role_id,signature,birthday,constellation,country,province,city,blog,family_last_op_time=0,last_login_time,last_offline_time,role_name,sex,ever_leave_xsc=false}).
-record(p_role, {base,fight,pos,attr,ext}).
-record(p_skill, {id,name,kind,effect_type,distance=0,attack_type,target_type,max_level,contain_common_attack,category,target_area}).
-record(p_skill_precondition, {skill_id,skill_level}).
-record(p_skill_level, {skill_id,level,premise_point,pre_condition,cool_time,category,premise_role_level,need_item=0,need_silver=0,consume_exp=0,effects,buffs,consume_mp,item_consume}).
-record(p_skill_item_consume, {item_typeid,number}).
-record(p_effect, {effect_id,effect_type,calc_type,absolute_or_rate,value,value_out_type,probability=100}).
-record(p_buf, {buff_id,level,absolute_or_rate,value,last_type,last_value,last_interval,can_remove,kind,buff_type,send_to_client=false,is_debuff=false}).
-record(p_map_stall, {role_id,role_name,stall_name,mode,pos}).
-record(p_pos, {tx,ty,px,py,dir=0}).
-record(p_map_tile, {tx,ty}).
-record(p_walk_path, {bpx,bpy,path,epx,epy}).
-record(p_map_role, {role_id,role_name,faction_id,cur_title,family_id,family_name,pos,last_walk_path,last_key_path,hp,max_hp,mp,max_mp,skin,move_speed,team_id=0,level,pk_point=0,state=0,gray_name,state_buffs,show_cloth,cur_title_color="ffffff",equip_ring_color=0,show_equip_ring=true,vip_level=0,mount_color=0,sex=0,category=0}).
-record(s_error_common_toc, {msg}).
-record(s_chat_leave_channel_tos, {role_id,channel_sign}).
-record(s_chat_join_channel_tos, {channel_info,role_info}).
-record(p_map_dropthing, {id,ismoney=false,bind=false,num=1,roles,pos,money,goodsid,colour,goodstype,goodstypeid,drop_property}).
-record(s_account_kick_toc, {account}).
-record(s_account_register_tos, {account,guid}).
-record(p_use_requirement, {sex,min_level,max_level,min_power,min_agile,min_brain,min_vitality,min_spirit}).
-record(p_property_add, {power,agile,brain,vitality,spirit,min_physic_att,max_physic_att,min_magic_att,max_magic_att,physic_def,magic_def,blood,magic,physic_att_rate,magic_att_rate,physic_def_rate,magic_def_rate,blood_rate,magic_rate,blood_resume_speed,magic_resume_speed,dead_attack,lucky,move_speed,attack_speed,dodge,no_defence,main_property,dizzy,poisoning,freeze,hurt,hurt_shift,poisoning_resist,dizzy_resist,freeze_resist,phy_anti=0,magic_anti=0,hurt_rebound=0}).
-record(p_equip_base_info, {typeid,equipname,slot_num,kind,colour,endurance,requirement,property,loss_endu,sell_type=1,sell_price,material,protype}).
-record(p_item_effect, {funid,parameter}).
-record(p_item_base_info, {typeid,itemname,kind,colour,usenum,sell_type=1,sell_price,requirement,effects,cd_type,is_overlap}).
-record(p_stone_base_info, {typeid,stonename,colour,requirement,level_prop,level,sell_type=1,sell_price,embe_equip_list,kind}).
-record(p_goods, {id,type,roleid,bagposition,current_num,bagid,sell_type=1,sell_price,typeid,bind=false,start_time=0,end_time=0,current_colour,state=0,name,level,embe_pos,embe_equipid,loadposition,quality,current_endurance,forge_num,reinforce_result=0,punch_num,stone_num,add_property,stones,reinforce_rate=0,endurance,signature,equip_bind_attr,refining_index=0,sign_role_id=0,five_ele_attr,whole_attr,reinforce_result_list,use_bind=0,sub_quality=0,quality_rate=0,exp=0,next_level_exp=0,light_code=0}).
-record(p_equip_bind_attr, {attr_code,attr_level,type,value}).
-record(p_equip_five_ele, {id=0,type_id,equip_name,level=0,active=0,phy_anti=0,magic_anti=0,hurt=0,no_defence=0,hurt_rebound=0,link_slot_num=0,whole_name}).
-record(p_equip_whole_attr, {id=0,sub_id=0,active=0,index=0,name,desc,number=0}).
-record(p_refresh_info, {refresh_type,refresh_interval,refresh_start_year,refresh_end_year,refresh_start_month,refresh_end_month,refresh_start_day,refresh_end_day,refresh_start_weekday,refresh_end_weekday,refresh_start_hour,refresh_end_hour,refresh_start_minute,refresh_end_minute,active_time,start_time,end_time}).
-record(p_monster_skill, {skillid,level}).
-record(p_drop_property, {bind=false,colour,quality,hole_num,use_bind=0}).
-record(p_drop_colour_mode, {colour,rate}).
-record(p_drop_quality_mode, {quality,rate}).
-record(p_drop_hole_mode, {hole_num,rate}).
-record(p_drop_mode, {mode_id,bind_rate=0,bind_colour,unbind_colour,bind_quality,unbind_quality,bind_hole,unbind_hole,use_bind=1}).
-record(p_single_drop, {type,typeid,weight}).
-record(p_drop_info, {drops,rate,max_num=1,drop_mode}).
-record(p_monster_base_info, {typeid,monstername,rarity,level,attacktype,max_hp,max_mp,min_attack,max_attack,phy_defence,magic_defence,blood_resume_speed,magic_resume_speed,dead_attack,lucky,move_speed,attack_speed,miss,no_defence,phy_anti,magic_anti,poisoning_resist=0,dizzy_resist=0,freeze_resist=0,equip_score=0,spec_score_one=0,spec_score_two=0,hit_rate=10000,ai_type,guard_radius,attention_radius,activity_radius,refresh,max_drop_num,droplist,exp,min_money,max_money,skinid,is_human,color,money_rate,skills}).
-record(p_enemy, {actor_key,total_hurt,last_att_time,pos,state=1}).
-record(p_monster, {monsterid,typeid,state,mapid,hp,mp,pos,reborn_pos,first_enemies,second_enemies,third_enemies,max_mp,max_hp,buffs,monstername,phy_defence,magic_defence,blood_resume_speed,magic_resume_speed,dead_attack,lucky,move_speed,attack_speed,miss,no_defence,min_attack,max_attack,phy_anti,magic_anti,poisoning_resist=0,dizzy_resist=0,freeze_resist=0,equip_score=0,spec_score_one=0,spec_score_two=0,hit_rate=10000}).
-record(p_map_monster, {monsterid,typeid,state,mapid,hp,mp,pos,max_mp,max_hp,move_speed,last_walk_path,state_buffs,monster_name}).
-record(p_monster_talk, {rate,talk}).
-record(p_boss_ai_skill, {skill_id,skill_level,weight,parm,reset_attacktime}).
-record(p_boss_ai_condition, {condition_id,rate,parm,total_weight,skills,timeout,talks}).
-record(p_boss_ai_plan, {boss_typeid,conditions}).
-record(p_mission_condition, {role_id,faction,sex,level,job,has_team,has_family=false}).
-record(p_family_info_change, {change_type,new_value}).
-record(p_family_info, {family_id,family_name,faction_id,level,create_role_id,create_role_name,owner_role_id,owner_role_name,second_owners,cur_members,active_points,money,request_list,invite_list,public_notice,private_notice,members,enable_map,kill_uplevel_boss,uplevel_boss_called,gongxun=0,ybc_status=0,ybc_begin_time=0,ybc_role_id_list,ybc_type,ybc_creator_id,hour=14,minute=30,seconds=0,interiormanager=0,leftprotector=0,rightprotector=0}).
-record(p_family_member_info, {role_id,role_name,title,office_name,family_contribution,sex,head,online=false,role_level=0,last_login_time=0}).
-record(p_family_second_owner, {role_id,role_name}).
-record(p_family_request, {role_id,role_name,office_name,level}).
-record(p_family_invite, {role_id,role_name,office_name,level}).
-record(p_rank_row, {row_id,role_id,elements,int_list}).
-record(p_role_family_donate_info, {role_id,role_name,donate_amount}).
-record(p_rank_element, {element_name,element_index,element_color}).
-record(p_ranking, {rank_id,rank_row,rank_column,rank_first_name,rank_second_name,capacity,elements,refresh_type,refresh_interval,rank_title}).
-record(p_role_level_rank, {role_id,role_name,faction_id,family_name,level,ranking,title,exp,category}).
-record(p_role_pkpoint_rank, {role_id,role_name,faction_id,family_name,ranking,title,pk_points}).
-record(p_family_active_rank, {family_id,family_name,owner_role_name,level,ranking,member_count,active,faction_id}).
-record(p_family_gongxun_rank, {family_id,family_name,owner_role_name,level,ranking,member_count,active,gongxun,lastweek_gongxun,lastweek_ranking}).
-record(p_family_gongxun_persistent_rank, {key,family_id,total_gongxun,ranking,date}).
-record(p_equip_rank, {goods_id,role_name,type_id,colour,quality,ranking,faction_id,refining_score,reinforce_score,stone_score,role_id}).
-record(p_role_gongxun_rank, {role_id,role_name,faction_id,family_name,level,ranking,title,exp,gongxun}).
-record(p_role_all_rank, {ranking,rank_name,key_value,key_name}).
-record(p_role_give_flowers_rank, {role_id,ranking,role_name,level,score,family_id,family_name,faction_id,title}).
-record(p_role_give_flowers_today_rank, {role_id,ranking,role_name,level,score,family_id,family_name,faction_id,title}).
-record(p_role_give_flowers_yesterday_rank, {role_id,ranking,role_name,level,score,family_id,family_name,faction_id,title}).
-record(p_role_give_flowers_last_week_rank, {role_id,ranking,role_name,level,score,family_id,family_name,faction_id,title}).
-record(p_role_give_flowers_this_week_rank, {role_id,ranking,role_name,level,score,family_id,family_name,faction_id,title}).
-record(p_role_rece_flowers_rank, {role_id,ranking,role_name,level,charm,family_id,family_name,faction_id,title}).
-record(p_role_rece_flowers_today_rank, {role_id,ranking,role_name,level,charm,family_id,family_name,faction_id,title}).
-record(p_role_rece_flowers_yesterday_rank, {role_id,ranking,role_name,level,charm,family_id,family_name,faction_id,title}).
-record(p_role_rece_flowers_last_week_rank, {role_id,ranking,role_name,level,charm,family_id,family_name,faction_id,title}).
-record(p_role_rece_flowers_this_week_rank, {role_id,ranking,role_name,level,charm,family_id,family_name,faction_id,title}).
-record(p_role_pet_rank, {pet_id,pet_type_name,role_id,ranking,role_name,level,color,understanding,score,faction_id,title,pet_name}).
-record(p_hero_fb_rank, {ranking,role_id,role_name,faction_id,time_used,barrier_id,score}).
-record(p_recommend_member_info, {role_id,role_name,level,sex,category}).
-record(p_achievement_info, {achieve_id=0,status=0,complete_time=0,cur_progress=0,total_progress=0,points=0,pop_type=0,achieve_type=0,class_id=0,group_id=0,role_id=0,role_name,faction_id=0}).
-record(p_achievement_stat_info, {type=0,cur_progress=0,total_progress=0,award_point=0}).
-record(p_map_collect, {id,typeid,name,degree,demand,times,goodslist,tool_typeid,point_id,pos,roles}).
-record(p_collect_role, {roleid,start_time,end_time}).
-record(p_collect_point, {id,typeid,state,pos,start_time,ripening_time,end_time,refresh,id_list,drop_type,max_num,grafts}).
-record(p_collect_point_base_info, {id,mapid,drop_type,pos,max_num,refresh,ripening_time,grafts}).
-record(p_collect, {rate,typeid}).
-record(p_collect_refresh, {type,interval,start_time,end_time}).
-record(p_collect_base_info, {id,name,degree,demand,times,goodslist,tool_typeid}).
-record(p_collect_demand, {min_level,max_level}).
-record(p_collect_goods, {goods_type,goods_typeid,goods_start_time,goods_end_time,goods_num,goods_bind,rate,is_broadcast}).
-record(p_map_trap, {trap_id,owner_id,owner_name,owner_type,faction_id,family_id,team_id,pk_mode,target_area,effects,buffs,skill_id,pos,remove_time,trap_type}).
-record(p_ybc_buff, {type,begin_time,end_time}).
-record(p_ybc_info, {}).
-record(p_map_ybc, {ybc_id,status,hp,max_hp,pos,move_speed,name,create_type,creator_id,color,create_time,end_time,buffs,group_id,group_type,can_attack,faction_id,physical_defence,magic_defence,recover_speed,level}).
-record(p_server_npc, {npc_id,type_id,npc_name,npc_type,state=0,map_id,level,hp,mp,reborn_pos,first_enemies,second_enemies,third_enemies,max_mp,max_hp,buffs,npc_country,is_undead,phy_defence,magic_defence,blood_resume_speed,magic_resume_speed,dead_attack,lucky,move_speed,attack_speed,miss,no_defence,min_attack,max_attack,phy_anti,magic_anti,poisoning_resist=0,dizzy_resist=0,freeze_resist=0,equip_score=0,spec_score_one=0,spec_score_two=0,hit_rate=10000}).
-record(p_map_server_npc, {npc_id,type_id,npc_name,npc_type,state=0,max_mp,max_hp,hp,mp,map_id,pos,move_speed,last_walk_path,state_buffs,is_undead=true,npc_country}).
-record(p_server_npc_base_info, {type_id,npc_name,npc_country,npc_type,level,max_hp,max_mp,min_attack,max_attack,phy_defence,magic_defence,blood_resume_speed,magic_resume_speed,dead_attack,lucky,move_speed,attack_speed,miss,no_defence,phy_anti,magic_anti,poisoning_resist=0,dizzy_resist=0,freeze_resist=0,equip_score=0,spec_score_one=0,spec_score_two=0,hit_rate=10000,attack_type,is_undead,guard_radius,attention_radius,activity_radius,refresh,skills,gongxun}).
-record(p_equip_onekey_info, {equips_id,equips_name,equips_list,equips_id_list}).
-record(p_equip_onekey_simple, {slot_num,equip_id,equip_typeid}).
-record(p_activity_info, {id,type,order_id=0,status=0,done_times=0,total_times=0}).
-record(p_actpoint_info, {id,cur_ap,max_ap}).
-record(p_trading_goods_base_info, {type_id,order_index,name,prices,number}).
-record(p_trading_goods, {type_id,order_index,name,price,number,sale_price=0}).
-record(p_family_ybc_money, {level,common,advance}).
-record(p_map_farm, {farm_id,status=0,planter_id,seed_id,seed_name,seed_type,sow_time,harvest_time,harvest_segment}).
-record(p_seed_info, {seed_id,seed_name,seed_type,level}).
-record(p_waroffaction_record, {id,faction_id,tick,content}).
-record(p_waroffaction_rank, {role_id,faction_id,score,role_name}).
-record(p_pet_base_info, {type_id,pet_name,carry_level,attack_type}).
-record(p_pet_skill, {skill_id,skill_type,skill_level=1}).
-record(p_pet, {pet_id,type_id,role_id,role_name,hp,max_hp,pet_name,color,understanding,sex,pk_mode,bind=false,mate_id,mate_name,level,exp,life,generated=false,buffs,str,int2,con,dex,men,base_str,base_int2,base_con,base_dex,base_men,remain_attr_points=0,phy_defence,magic_defence,phy_attack,magic_attack,double_attack,hit_rate,miss,attack_speed,equip_score,spec_score_one,spec_score_two,attack_type,period=1,skills,title,max_hp_aptitude,phy_defence_aptitude,magic_defence_aptitude,phy_attack_aptitude,magic_attack_aptitude,double_attack_aptitude,get_tick,next_level_exp,state=1,max_hp_grow_add=0,phy_defence_grow_add=0,magic_defence_grow_add=0,phy_attack_grow_add=0,magic_attack_grow_add=0,max_skill_grid=4}).
-record(p_map_pet, {pet_id,type_id,pet_name,state=1,hp,pos,attack_speed,max_hp,level,role_id,state_buffs,title,color}).
-record(p_pet_id_name, {pet_id,name,color=2,type_id,index=0,exp=0,next_level_exp=0}).
-record(p_role_pet_bag, {role_id,content,pets}).
-record(p_pet_attr_assign, {assign_type,assign_value}).
-record(p_pet_feed, {role_id,state=1,star_level=1,last_feed_day=0,feed_time=0,last_feed_exp=0,feed_over_flag=false,feed_over_tick=0,feed_tick=0,free_star_up_flag=true,feed_type,pet_id,star_up_fail_time=0,last_clear_star_week=0,star_up_flag=false}).
-record(p_pet_training_info, {pet_id,training_start_time=0,training_end_time=0,training_mode=1,fly_cd_end_time=0,total_get_exp=0}).
-record(p_role_pet_grow, {role_id,state=1,grow_type=0,grow_over_tick,grow_tick,con_level=0,phy_defence_level=0,magic_defence_level=0,phy_attack_level=0,magic_attack_level=0}).
-record(p_grow_info, {type,level=1,need_level=0,need_silver=0,add_value,need_tick=0,cur_add_value}).
-record(p_pet_refining, {id,exp=1}).
-record(p_role_pet_egg_type_list, {role_id,type_id_list,refresh_num=0}).
-record(p_educate_fb_item, {item_id,use_tx,use_ty,role_id,role_name,status}).
-record(p_educate_fb_award, {min_count,max_count,award_number}).
-record(p_present_info, {present_id,title,is_direct_get=true,item_list,npc_id}).
-record(p_conlogin_reward, {id,type,type_id,min_level,max_level,need_payed,num,silver,gold,bind,need_vip_level}).
-record(p_accumulate_exp_info, {id,day,exp,max_exp,times_per_day,need_gold,status,next_exp,rate}).
-record(p_fml_buff, {fml_buff_id,level}).
-record(p_role_vip, {role_id,end_time,total_time,vip_level,multi_exp_times,accumulate_exp_times,mission_transfer_times,is_transfer_notice_free,is_transfer_notice,last_reset_time,is_expire,pet_training_times,remote_depot_num,last_get_prestige_time=0}).
-record(p_vip_list_info, {role_id,role_name,skin_id,level,faction_id,family_name,total_time,is_online}).
-record(p_fmldepot_log, {log_time,role_name,item_type_id,item_color,item_num}).
-record(p_fmldepot_bag, {bag_id,goods_list}).
-record(p_equip_mount_renewal, {type_id,renewal_type=0,renewal_days=0,renewal_fee=0}).
-record(p_scene_war_fb_link, {fb_type=0,fb_level=0,fb_id=0,fb_seconds=0,enter_fee=0,fb_times=0,fb_max_times=0}).
-record(p_scene_war_fb_role_info, {roleid,name,level}).
-record(p_scene_war_fb_team_info, {teamid,leader,members,fb_type,fb_level,faction,creator}).
-record(p_family_collect_role_prize_info, {role_id,color=1,base_exp=0,total_score=0}).
-record(p_gift_goods, {id,type,typeid,bind,start_time,end_time,num,rate,color}).
-record(p_map_bonfire, {id,state,pos,start_time,end_time,rate,members=0,fagot=0}).
-record(p_family_task, {id,status=0}).
-record(p_role_hero_fb_info, {role_id,last_enter_time,today_count,progress,rewards,fb_record,max_enter_times,buy_count,enter_mapid,enter_pos,fail_code=1}).
-record(p_hero_fb_barrier, {barrier_id,time_used=0,star_level=0,score=0,fight_times=0,order=0}).
-record(p_hero_fb_record, {role_id,role_name,faction_id,time_used,score=0,star_level,order}).
-record(p_hero_fb_poker_reward, {reward_type=0,reward_value=0,reward_level=0,reward_list}).
-record(p_refining, {firing_type,goods_id,goods_type,goods_type_id,goods_number}).
-record(p_refining_box_log, {role_id,role_sex,role_name,faction_id,award_time,box_list}).
-record(p_online_info, {memberid,otherattr}).
-record(p_role_goal, {role_id,goals,days}).
-record(p_role_goal_item, {goal_id,finished=false,process_num=0,fetched=false}).
-record(p_goal_config, {goal_id,gold_bind=0,gold=0,silver_bind=0,silver=0,exp=0,items,num=1,day}).
-record(p_goal_item, {item_id,item_type,color=1,quality=1,bind=true,end_time=0,num=1}).
-record(p_prestige_item, {group_id=0,class_id=0,key=0,need_prestige=0,min_level=0,max_level=0,item}).
-record(p_activity_condition, {condition_id,condition,multi,simple_goods,able}).
-record(p_activity_prize_goods, {type_id,num,color,quality,bind=true,last_time}).
-record(p_boss_group, {boss_id,start_time,end_time,last_time,space_time,map_id,tx,ty}).
-record(p_reward_prop, {prop_id,prop_type,prop_num,bind}).
-record(p_equip_item, {typeid,color,quality,isbind,timelimit}).
-record(m_chat_auth_tos, {account,roleid,key,timestamp}).
-record(m_chat_auth_toc, {succ=true,reason,channel_list,black_list,gm_auth}).
-record(m_chat_join_channel_toc, {channel_info,role_info}).
-record(m_chat_leave_channel_toc, {channel_sign,channel_type}).
-record(m_chat_in_channel_tos, {channel_sign,msg}).
-record(m_chat_in_channel_toc, {succ=true,reason,channel_sign,msg,role_info,tstamp}).
-record(m_chat_in_pairs_tos, {msg,to_rolename,show_type=1}).
-record(m_chat_in_pairs_toc, {succ=true,show_type=1,reason,msg,from_role_info,to_role_info,tstamp,error_code=0,to_role_id=0}).
-record(m_chat_add_black_tos, {rolename}).
-record(m_chat_add_black_toc, {succ,reason,role_info}).
-record(m_chat_remove_black_tos, {rolename}).
-record(m_chat_remove_black_toc, {succ,reason,role_info}).
-record(m_chat_get_black_toc, {succ,reason,role_list}).
-record(m_chat_manage_mute_tos, {rolename,duration}).
-record(m_chat_manage_mute_toc, {succ=true,reason}).
-record(m_chat_manage_kick_tos, {rolename}).
-record(m_chat_manage_kick_toc, {succ=true,reason}).
-record(m_chat_manage_ban_tos, {rolename,duration}).
-record(m_chat_manage_ban_toc, {succ=true,reason}).
-record(m_chat_limit_notify_toc, {limit_type,reason}).
-record(m_chat_status_change_toc, {role_id,channel_sign,channel_type,status}).
-record(m_chat_quick_toc, {role_id,channel_sign,channel_type}).
-record(m_chat_new_join_toc, {role_info,channel_sign,channel_type}).
-record(m_chat_get_roles_tos, {channel_sign}).
-record(m_chat_get_roles_toc, {succ,reason,channel_sign,channel_type,roles}).
-record(m_chat_warofking_toc, {family_name,role_name}).
-record(m_chat_get_goods_tos, {goods_id}).
-record(m_chat_get_goods_toc, {succ=true,goods_id,goods_info,reason}).
-record(m_chat_reconnect_tos, {}).
-record(m_chat_reconnect_toc, {succ,reason,account,roleid,timestamp,key}).
-record(m_chat_king_ban_tos, {roleid,rolename,total_times}).
-record(m_chat_king_ban_toc, {succ=true,reason,bantimes}).
-record(m_login_flash_tos, {account,tstamp,agent_id,server_id,fcm,ticket}).
-record(m_login_flash_toc, {succ=true,reason,result,faction_id=1}).
-record(m_line_list_tos, {roleid}).
-record(m_line_list_toc, {succ=true,msg,lines}).
-record(p_line_info, {guid,ip,port,line}).
-record(m_role_list_toc, {succ=true,reason,result}).
-record(m_role_add_tos, {role_name,sex,faction_id,head,hair_type,hair_color=0}).
-record(m_role_add_toc, {succ=true,reason,result}).
-record(m_role_del_tos, {roleid}).
-record(m_role_del_toc, {succ=true,reason}).
-record(m_role_chose_tos, {roleid}).
-record(m_role_chose_toc, {succ,msg,key,lines,wait_second}).
-record(m_auth_key_tos, {account_name,role_id,key,time}).
-record(m_auth_key_toc, {succ,reason,role_details,bags,family,server_time}).
-record(m_auth_chat_key_tos, {times=1}).
-record(m_auth_chat_key_toc, {succ,times,reason,account,roleid,timestamp,key}).
-record(p_bag_content, {bag_id,goods,rows=0,columns=0,typeid,grid_number=0}).
-record(p_skill_pos, {pos,skill_id}).
-record(m_map_enter_tos, {map_id}).
-record(m_map_enter_toc, {succ=true,return_self=true,reason,roles,monsters,dropthings,stalls,grafts,ybcs,pos,server_npcs,role_map_info,pets,trap_list}).
-record(m_map_slice_enter_toc, {roles,monsters,dropthings,stalls,grafts,ybcs,return_self=true,server_npcs,pets,trap_list,del_roles,del_monsters,del_dropthings,del_stalls,del_grafts,del_ybcs,del_server_npcs,del_pets,del_trap_list,enter_type=1,src_pos}).
-record(m_map_update_actor_mapinfo_tos, {actor_id,actor_type,map_id}).
-record(m_map_update_actor_mapinfo_toc, {actor_id,actor_type,role_info,monster_info,server_npc,ybc_info,pet_info}).
-record(m_map_transfer_tos, {mapid,tx,ty,change_type}).
-record(m_map_transfer_toc, {succ=true,scroll_id,reason}).
-record(m_map_role_killed_toc, {role_name,killer_name,faction_id,map_id,tx,ty}).
-record(m_move_keywalk_tos, {pos}).
-record(m_move_keywalk_toc, {role_id,pos}).
-record(m_move_keystop_tos, {pos}).
-record(m_move_keystop_toc, {role_id,pos}).
-record(m_move_walk_path_tos, {walk_path}).
-record(m_move_walk_path_toc, {roleid,walk_path}).
-record(m_move_walk_tos, {pos}).
-record(m_move_sync_toc, {roleid,pos}).
-record(m_map_quit_toc, {roleid}).
-record(m_skin_change_toc, {roleid,skin}).
-record(m_map_dropthing_enter_toc, {dropthing}).
-record(m_map_dropthing_quit_toc, {dropthingid}).
-record(m_map_dropthing_pick_tos, {dropthingid}).
-record(m_map_dropthing_pick_toc, {succ=true,reason,pick_type=1,add_money=0,money=0,dropthingid,goods,num,money_type=0}).
-record(m_map_change_map_tos, {mapid,tx,ty}).
-record(m_map_change_map_toc, {succ=true,mapid,tx,ty,reason}).
-record(m_map_change_pos_toc, {tx,ty,change_type}).
-record(m_config_getbuffs_tos, {}).
-record(m_config_getbuffs_toc, {succ=true,reason,buffs}).
-record(p_buff_effect, {effect_type,effect_value,buff_type}).
-record(m_fight_buff_effect_toc, {actor_id,actor_type,buff_effect,src_id,src_type}).
-record(m_fight_remove_buff_toc, {roleid,buffid}).
-record(m_fight_attack_tos, {tile,skillid,target_id,target_type,src_type=1,dir}).
-record(p_attack_result, {dest_id,is_erupt=false,is_no_defence=false,is_miss=false,dest_type,dest_tile,buffs,result_type=0,result_value=0}).
-record(m_fight_attack_toc, {succ=true,return_self=true,reason,src_id,skillid,src_pos,src_type,result,dir,dest_pos,target_type,target_id,reason_code}).
-record(p_team_role, {role_id,role_name,sex,skin,map_id,map_name,tx,ty,hp,mp,max_hp,max_mp,level,is_leader=false,is_follow=false,is_offline=false,offline_time=0,five_ele_attr=0,five_ele_attr_level=0,add_hp=0,add_mp=0,add_phy_attack=0,add_magic_attack=0,category=0,faction_id=0}).
-record(m_team_invite_tos, {role_id,type=0,team_id=0}).
-record(m_team_invite_toc, {succ=true,return_self=true,reason,role_id,role_name,team_id,pick_type=1,leader_id=0,type_id=0}).
-record(m_team_accept_tos, {role_id,team_id=0,leader_id=0,type_id=0}).
-record(m_team_accept_toc, {succ=true,return_self=true,reason,role_list,role_id,role_name,team_id,pick_type=1,type_id=0}).
-record(m_team_refuse_tos, {role_id,team_id=0,leader_id=0,type_id=0}).
-record(m_team_refuse_toc, {role_id,role_name,team_id,type_id=0}).
-record(m_team_leave_tos, {team_id}).
-record(m_team_leave_toc, {succ=true,return_self=true,reason,role_list,role_id,role_name,team_id}).
-record(m_team_kick_tos, {role_id}).
-record(m_team_kick_toc, {succ=true,return_self=true,reason,role_list,role_id,role_name,team_id}).
-record(m_team_offline_toc, {cache_offline=false,role_list,role_id,role_name,team_id}).
-record(m_team_change_leader_tos, {team_id,role_id,role_name}).
-record(m_team_change_leader_toc, {succ=true,return_self=true,reason,role_list,role_id,role_name,team_id}).
-record(m_team_disband_tos, {team_id}).
-record(m_team_disband_toc, {succ=true,return_self=true,team_id,reason}).
-record(m_team_pick_tos, {pick_type=1}).
-record(m_team_pick_toc, {succ=true,return_self=true,pick_type=1,reason}).
-record(m_team_auto_disband_toc, {succ=true,reason}).
-record(m_team_auto_list_toc, {return_self=true,team_id=0,role_list,pick_type=1,visible_role_list}).
-record(m_team_member_invite_tos, {op_type,member_id,member_name,role_id,role_name}).
-record(m_team_member_invite_toc, {op_status,member_id,member_name,role_id,role_name,succ=true,return_self=true,reason,op_type}).
-record(m_team_member_recommend_tos, {}).
-record(m_team_member_recommend_toc, {succ=true,member_info,reason}).
-record(m_team_apply_tos, {role_id=0,op_type=0,apply_id=0}).
-record(m_team_apply_toc, {succ=true,return_self=true,role_id=0,op_type=0,apply_id=0,apply_name,reason,role_list,team_id=0,pick_type=1}).
-record(m_team_query_tos, {op_type=0}).
-record(m_team_query_toc, {op_type=0,succ=true,reason,reason_code=0,nearby_list}).
-record(p_team_nearby, {team_id=0,cur_team_number=0,sum_team_number=0,role_id=0,sex=0,faction_id=0,level=0,category=0,skinid,role_name,auto_accept_team=true}).
-record(m_team_create_tos, {role_id=0}).
-record(m_team_create_toc, {role_id=0,succ=true,reason,reason_code=0,role_list,team_id,pick_type=1}).
-record(m_friend_request_tos, {name}).
-record(m_friend_request_toc, {succ=true,name,reason,return_self=true}).
-record(m_friend_accept_tos, {name}).
-record(m_friend_accept_toc, {succ=true,name,friend_info,reason,return_self=true}).
-record(m_friend_refuse_tos, {name}).
-record(m_friend_refuse_toc, {succ=true,name,return_self=true,reason}).
-record(m_friend_delete_tos, {roleid}).
-record(m_friend_delete_toc, {succ=true,type,reason,return_self=true,roleid}).
-record(m_friend_black_tos, {name}).
-record(m_friend_black_toc, {succ=true,name,friend_info,reason,return_self}).
-record(m_friend_enemy_toc, {enemy_info}).
-record(m_friend_list_tos, {}).
-record(m_friend_list_toc, {succ=true,friend_list,reason}).
-record(p_friend_info, {roleid,rolename,type,sex,faction_id,level,friendly,is_online,sign,family_name,relative,head}).
-record(p_simple_friend_info, {rolename,faction_id,is_online,head,level}).
-record(m_friend_offline_request_toc, {request_list}).
-record(m_friend_change_relative_toc, {role_id,relative}).
-record(m_friend_add_friendly_toc, {role_id,friendly}).
-record(m_friend_online_toc, {roleid}).
-record(m_friend_offline_toc, {roleid}).
-record(m_friend_upgrade_toc, {roleid,oldlevel,newlevel}).
-record(m_friend_info_tos, {roleid}).
-record(m_friend_info_toc, {succ=true,friend_info,reason,equips}).
-record(m_friend_modify_tos, {info}).
-record(m_friend_modify_toc, {succ=true,reason,return_self=true,info}).
-record(m_friend_create_family_toc, {role_id,family_id,family_name}).
-record(m_friend_get_info_tos, {roleid}).
-record(m_friend_get_info_toc, {roleinfo}).
-record(m_friend_update_family_toc, {role_id,family_id,family_name,level}).
-record(m_friend_recommend_tos, {}).
-record(m_friend_recommend_toc, {succ=true,friend_info,reason}).
-record(m_friend_congratulation_tos, {to_friend_id,congratulation}).
-record(m_friend_congratulation_toc, {succ=true,return_self=true,reason,exp_add,hyd_add,from_friend,congratulation,bottle_exp=0}).
-record(m_friend_advertise_tos, {}).
-record(m_friend_advertise_toc, {succ=true,reason}).
-record(m_friend_bottle_tos, {op_type}).
-record(m_friend_bottle_toc, {op_type,succ=true,reason,reason_code=0,bottle_exp=0,award_exp=0}).
-record(m_shop_shops_tos, {}).
-record(p_shop_info, {id,name,branch_shop}).
-record(m_shop_shops_toc, {shops}).
-record(m_shop_all_goods_tos, {shop_id,npc_id}).
-record(p_shop_currency, {id,amount}).
-record(p_shop_price, {id,currency}).
-record(p_shop_goods_info, {goods_id,seat_id,packe_num=1,time,role_grade,goods_bind=false,goods_modify,price,type,property,colour,discount_type=0,shop_id,price_bind}).
-record(m_shop_all_goods_toc, {shop_id,all_goods,npc_id}).
-record(m_shop_item_tos, {shop_id,item_type_id}).
-record(m_shop_item_toc, {succ=true,reason,shop_id,goods}).
-record(m_shop_search_tos, {search_goods_id,npc_id}).
-record(m_shop_search_toc, {search_all_goods,npc_id}).
-record(m_shop_buy_tos, {goods_id,price_id,goods_num=1,shop_id}).
-record(m_shop_buy_toc, {succ=false,reason="",goods,property,error_code}).
-record(p_shop_sale_goods, {id,type_id,position,number}).
-record(m_shop_sale_tos, {goods}).
-record(m_shop_sale_toc, {succ,property,ids,reason}).
-record(m_shop_buy_back_tos, {op_type,goods_id}).
-record(m_shop_buy_back_toc, {op_type,goods,succ=true,reason,goods_id}).
-record(m_shop_npc_tos, {npc_id}).
-record(m_shop_npc_toc, {npc_id,shops}).
-record(p_letter_info, {id,sender,receiver,title,send_time,type,goods_list,goods_take,state=1,letter_content="",table}).
-record(p_letter_goods, {goods_id,num}).
-record(p_letter_simple_info, {id,sender,receiver,title,send_time,type,state,is_have_goods=false,table}).
-record(m_letter_get_tos, {pack_num=0}).
-record(m_letter_get_toc, {letters,request_mark}).
-record(m_letter_get_send_tos, {pack_num=0,only_many_send=false}).
-record(m_letter_get_send_toc, {letters,only_many_send=false,request_mark}).
-record(m_letter_get_receive_tos, {pack_num=0}).
-record(m_letter_get_receive_toc, {letters,request_mark}).
-record(m_letter_open_tos, {letter_id,table,is_self_send=false}).
-record(m_letter_open_toc, {succ,result,reason}).
-record(m_letter_p2p_send_tos, {receiver,text,goods_list}).
-record(m_letter_clan_send_tos, {receiver,text}).
-record(m_letter_family_send_tos, {text,range}).
-record(m_letter_batch_send_tos, {text,goods_list,type,days,condition}).
-record(p_letter_send_condition, {receiver,time,grade,sex,factionid}).
-record(m_letter_send_toc, {succ,letter,reason}).
-record(m_letter_delete_tos, {letters}).
-record(p_letter_delete, {letter_id,is_self_send=false,table}).
-record(m_letter_delete_toc, {succ,no_del,reason}).
-record(m_letter_accept_goods_tos, {letter_id,table}).
-record(m_letter_accept_goods_toc, {succ,goods_list,goods_take,reason}).
-record(m_letter_state_change_tos, {letter_id,state,is_self_send=false}).
-record(m_letter_state_change_toc, {succ,reason}).
-record(m_equip_mountup_tos, {mountid}).
-record(m_equip_mountup_toc, {succ=true,reason,mount_new,mount_old}).
-record(m_equip_mountdown_tos, {mountid,bagid,position}).
-record(m_equip_mountdown_toc, {succ=true,reason,mount}).
-record(m_equip_mount_changecolor_tos, {mountid}).
-record(m_equip_mount_changecolor_toc, {succ=true,reason,color,mount}).
-record(m_equip_mount_renewal_tos, {op_type=0,mount_id=0,mount_type_id=0,mount_pos=0,renewal_type=0}).
-record(m_equip_mount_renewal_toc, {succ=true,reason,reason_code=0,op_type=0,mount_id=0,mount_type_id=0,mount_pos=0,renewal_type=0,end_time=0,op_fee=0,mount,renewal_confs,all_gold=0}).
-record(m_equip_loaded_list_tos, {roleid}).
-record(m_equip_loaded_list_toc, {roleid,equips}).
-record(m_equip_load_tos, {equip_slot_num,equipid}).
-record(m_equip_load_toc, {succ=true,reason,equip1,equip2}).
-record(m_equip_unload_tos, {equipid,bagid,position}).
-record(m_equip_unload_toc, {succ=true,reason,equip}).
-record(m_equip_swap_tos, {equipid1,position2}).
-record(m_equip_swap_toc, {succ=true,reason,equip1,equip2}).
-record(m_equip_fix_tos, {fix_type,equip_id}).
-record(m_equip_fix_toc, {succ=true,reason,equip_list,silver,bind_silver}).
-record(m_equip_endurance_change_toc, {equip_list}).
-record(p_equip_endurance_info, {equip_id,num,max_num}).
-record(m_item_use_tos, {itemid,usenum,effect_id}).
-record(m_item_use_toc, {succ=true,reason,itemid,rest}).
-record(m_item_use_special_tos, {item_id=0}).
-record(m_item_use_special_toc, {item_id=0,succ=true,reason,reason_code=0,use_status=0,total_progress=0,use_effect=0,effects,new_goods_list,progress_desc}).
-record(m_item_trace_tos, {target_name,goods_id}).
-record(m_item_trace_toc, {succ=true,reason,goods_id,goods_num,target_name,target_mapid,target_tx,target_ty}).
-record(m_item_batch_sell_tos, {id_list}).
-record(m_item_batch_sell_toc, {succ=true,reason,silver,bind_silver}).
-record(m_item_new_extend_bag_toc, {bagid,rows,columns,typeid,grid_number,main_rows,main_columns,main_grid_number}).
-record(m_item_shrink_bag_tos, {bagid,bag,position}).
-record(m_item_shrink_bag_toc, {succ,reason,item,bagid,rows,columns,grid_number}).
-record(m_goods_inbag_list_tos, {bagid}).
-record(m_goods_inbag_list_toc, {bagid,goods}).
-record(m_goods_info_tos, {id,target_id,type}).
-record(m_goods_info_toc, {succ=true,info,type,reason,goods_id}).
-record(m_goods_destroy_tos, {id}).
-record(m_goods_destroy_toc, {succ=true,reason,id}).
-record(m_goods_swap_tos, {id1,position2,bagid2}).
-record(m_goods_swap_toc, {succ=true,reason,goods1,goods2}).
-record(m_goods_divide_tos, {id,num,bagposition,bagid}).
-record(m_goods_divide_toc, {succ=true,reason,goods1,goods2}).
-record(m_goods_update_toc, {goods}).
-record(m_goods_tidy_tos, {bagid}).
-record(m_goods_tidy_toc, {bagid,goods}).
-record(m_goods_show_goods_tos, {channel_sign,to_role_name,show_type,goods_id}).
-record(m_goods_show_goods_toc, {succ=true,reason}).
-record(m_role2_exp_full_toc, {text}).
-record(m_role2_levelup_tos, {}).
-record(m_role2_levelup_toc, {level,attr_points,maxhp,maxmp,msg,skill_points,exp,next_level_exp,total_add_exp}).
-record(m_role2_levelup_other_toc, {roleid}).
-record(p_role_attr_change, {change_type,new_value}).
-record(m_role2_attr_change_toc, {roleid,changes}).
-record(m_role2_attr_reload_toc, {role_attr}).
-record(m_role2_base_reload_toc, {role_base}).
-record(m_role2_reload_toc, {role_base,role_attr}).
-record(m_role2_newbuffs_toc, {roleid,type,remain_time,value}).
-record(m_role2_dead_toc, {killer,relive_type,relive_silver,dead_type=0}).
-record(m_role2_dead_other_toc, {roleid}).
-record(m_role2_relive_toc, {succ=true,return_self=true,reason,role_base,role_fight,role_pos,map_role,map_changed=false}).
-record(m_role2_unbund_change_tos, {unbund}).
-record(m_role2_unbund_change_toc, {succ}).
-record(m_role2_rely_main_tos, {is_rely}).
-record(m_role2_rely_main_toc, {succ}).
-record(m_role2_relive_tos, {type}).
-record(m_role2_pointassign_tos, {type,value}).
-record(m_role2_pointassign_toc, {succ=true,reason}).
-record(m_role2_getroleattr_tos, {role_id,is_check=false}).
-record(m_role2_getskillinfo_tos, {}).
-record(m_role2_getskillinfo_toc, {succ=true,reason,skills}).
-record(m_role2_skillassign_tos, {skillid,points}).
-record(m_role2_skillassign_toc, {succ=true,reason,result,remain_points}).
-record(m_role2_skilllearn_tos, {skillid}).
-record(m_role2_skilllearn_toc, {succ=true,reason,skillid}).
-record(m_role2_getrolemapinfo_tos, {role_id}).
-record(m_role2_getroleattr_toc, {succ=true,reason,role_info}).
-record(p_other_role_info, {role_id,role_name,sex,faction_id,family_name,five_ele_attr,office_name="",charm,category,level,level_rank,equips,vip_level,gongxun,pk_point,moral_value,str,int2,con,dex,men,max_phy_attack,min_phy_attack,max_magic_attack,min_magic_attack,double_attack,phy_defence,magic_defence,birthday,province,pet_id,city,luck,miss,no_defence,hit_rate,sum_prestige,cur_prestige,cur_title,pk_title,max_hp,max_mp,cur_energy,max_energy,skin}).
-record(m_role2_getrolemapinfo_toc, {succ=true,reason,role_info}).
-record(m_role2_pkmodemodify_tos, {pk_mode}).
-record(m_role2_pkmodemodify_toc, {succ=true,reason,pk_mode=0}).
-record(m_role2_zazen_tos, {status}).
-record(m_role2_zazen_toc, {succ=true,roleid,return_self=true,status,reason,sum_exp=0}).
-record(m_role2_five_ele_attr_tos, {type=0}).
-record(m_role2_five_ele_attr_toc, {succ=true,reason,five_ele_attr_level=0,five_ele_attr=0}).
-record(m_role2_gray_name_tos, {}).
-record(m_role2_gray_name_toc, {roleid,if_gray_name}).
-record(m_role2_show_cloth_tos, {show_cloth}).
-record(m_role2_show_cloth_toc, {succ=true,reason,show_cloth}).
-record(m_role2_show_equip_ring_tos, {show_equip_ring}).
-record(m_role2_show_equip_ring_toc, {succ=true,reason,show_equip_ring}).
-record(m_role2_pkpoint_left_tos, {}).
-record(m_role2_pkpoint_left_toc, {time_left}).
-record(m_role2_hair_tos, {hair_type,hair_color}).
-record(m_role2_hair_toc, {succ=true,reason}).
-record(m_role2_head_tos, {head_id}).
-record(m_role2_head_toc, {succ=true,reason,head_id}).
-record(m_role2_sex_tos, {}).
-record(m_role2_sex_toc, {succ=true,sex,reason}).
-record(m_role2_event_tos, {event_id}).
-record(m_role2_event_toc, {succ=true,event_id,reason}).
-record(m_role2_system_buff_toc, {sys_buff}).
-record(p_sys_buff_info, {buff_type,multiple,remain_time}).
-record(m_role2_remove_skin_buff_tos, {}).
-record(m_role2_remove_skin_buff_toc, {succ=true,reason}).
-record(m_role2_add_energy_tos, {gold_exchange}).
-record(m_role2_add_energy_toc, {succ=true,reason,gold,gold_bind,energy,energy_remain}).
-record(m_role2_online_broadcast_toc, {role_type,role_name,faction_id=0}).
-record(m_role2_query_faction_online_rank_tos, {op_type=0,faction_id=0}).
-record(m_role2_query_faction_online_rank_toc, {op_type=0,faction_id=0,succ=true,reason,reason_code=0,online_rank}).
-record(p_faction_online_rank, {faction_id,role_id,role_name,role_level}).
-record(m_mission_listener_toc, {code=0,code_data,mission_id,listener}).
-record(p_mission_listener, {type,value,int_list,need_num,current_num}).
-record(p_mission_info, {id=0,model=0,type=0,current_status=0,pre_status=0,current_model_status=0,pre_model_status=0,commit_times=0,succ_times=0,accept_time=0,accept_level=0,status_change_time=0,listener_list,int_list_1,int_list_2,int_list_3,int_list_4}).
-record(m_mission_list_tos, {}).
-record(m_mission_list_toc, {code=0,code_data,list}).
-record(m_mission_vs_tos, {}).
-record(m_mission_vs_toc, {version}).
-record(m_mission_do_tos, {id,npc_id,prop_choose,int_list_1,int_list_2}).
-record(p_mission_reward_data, {exp,silver,silver_bind,prop,prestige}).
-record(p_mission_prop, {prop_id,prop_type,prop_num,bind,color}).
-record(m_mission_do_toc, {id,current_status=0,pre_status=0,current_model_status=0,pre_model_status=0,reward_data,code=0,code_data}).
-record(m_mission_cancel_tos, {id}).
-record(m_mission_cancel_toc, {id,current_status=0,current_model_status=0,pre_model_status=0,code=0,code_data}).
-record(m_mission_update_toc, {del_mission_list,update_mission_list}).
-record(p_mission_auto, {id,name,big_group,mission_id,loop_times=0,status=0,start_time=0,end_time=0,need_gold=0,loop_one_time=0,max_loop_times=0,role_level=0,min_level=0,rollback_times=0,cur_times=0}).
-record(m_mission_list_auto_tos, {}).
-record(m_mission_list_auto_toc, {list}).
-record(m_mission_do_auto_tos, {id,loop_times}).
-record(m_mission_do_auto_toc, {id,auto_info,code=0,code_data}).
-record(m_mission_cancel_auto_tos, {id}).
-record(m_mission_cancel_auto_toc, {id,code=0,code_data}).
-record(m_family_ybc_sure_tos, {}).
-record(m_family_ybc_sure_toc, {succ=true,reason,return_self=true}).
-record(m_family_ybc_giveup_tos, {}).
-record(m_family_ybc_giveup_toc, {succ=true,reason,return_self=true,role_id}).
-record(m_family_ybc_join_tos, {}).
-record(m_family_ybc_join_toc, {succ=true,reason,return_self=true,role_id}).
-record(m_family_ybc_publish_tos, {type}).
-record(m_family_ybc_publish_toc, {succ=true,reason,return_self=true,type,remain_time=0,owner_type,owner_name,silver,owner_id,is_alert}).
-record(m_family_ybc_status_toc, {status}).
-record(m_family_ybc_agree_publish_tos, {}).
-record(m_family_ybc_agree_publish_toc, {succ=true,reason,return_self=true,role_id,role_name,silver,begin_time,ybc_role_id_list}).
-record(m_family_ybc_commit_tos, {}).
-record(m_family_ybc_commit_toc, {succ=true,reason,return_self=true,exp,silver,contribution,family_money,active_point}).
-record(m_family_ybc_call_help_toc, {map_id}).
-record(m_family_ybc_accept_help_tos, {}).
-record(m_family_ybc_accept_help_toc, {succ=true,reason,return_self=true,role_name}).
-record(m_family_ybc_collect_tos, {content}).
-record(m_family_ybc_collect_toc, {succ=true,reason,return_self=true,map_id,owner_type,owner_name,content}).
-record(m_family_ybc_accept_collect_tos, {}).
-record(m_family_ybc_accept_collect_toc, {succ=true,reason}).
-record(m_family_ybc_list_tos, {}).
-record(m_family_ybc_list_toc, {succ=true,reason,members}).
-record(p_family_ybc_member_info, {role_id,role_name,status}).
-record(m_family_ybc_kick_tos, {role_id}).
-record(m_family_ybc_kick_toc, {succ=true,reason,return_self=true,role_id,role_name}).
-record(m_family_ybc_add_hp_tos, {}).
-record(m_family_ybc_add_hp_toc, {succ=true,reason,return_self=true,hp}).
-record(m_family_ybc_alert_tos, {role_id}).
-record(m_family_ybc_alert_toc, {succ=true,reason,return_self=true}).
-record(m_family_ybc_invite_tos, {}).
-record(m_family_ybc_invite_toc, {succ=true,reason,return_self=true,type,role_id}).
-record(m_ybc_faraway_toc, {pos,map_id}).
-record(m_ybc_enter_toc, {ybc_info}).
-record(m_ybc_quit_toc, {ybc_id}).
-record(m_ybc_dead_toc, {ybc_id}).
-record(m_ybc_info_tos, {ybc_id}).
-record(m_ybc_walk_toc, {ybc_id,pos}).
-record(m_ybc_speed_toc, {ybc_id,move_speed}).
-record(m_ybc_pos_toc, {ybc_id,map_id,tx,ty}).
-record(m_ybc_notify_pos_toc, {map_id,tx,ty}).
-record(m_monster_enter_toc, {monsters}).
-record(m_monster_quit_toc, {monsterid}).
-record(m_monster_dead_toc, {monsterid}).
-record(m_monster_attr_change_toc, {monsterid,change_type,value}).
-record(m_monster_walk_path_toc, {monsterid,walk_path}).
-record(m_monster_walk_toc, {monsterinfo,pos}).
-record(m_monster_summon_toc, {monster_id}).
-record(m_monster_talk_toc, {monster_id,content}).
-record(m_monster_query_tos, {}).
-record(m_monster_query_toc, {monster_type_list}).
-record(m_exchange_request_tos, {target_roleid,special_case=0}).
-record(m_exchange_request_toc, {succ=true,reason,return_self=true,src_role_id,src_role_name,special_case=0}).
-record(m_exchange_agree_tos, {src_roleid,special_case=0}).
-record(m_exchange_agree_toc, {succ=true,reason,return_self=true,target_role_id,target_role_name,special_case=0}).
-record(m_exchange_refuse_tos, {src_roleid,special_case=0}).
-record(m_exchange_refuse_toc, {succ=true,reason,return_self=true,role_id,role_name,special_case=0}).
-record(m_exchange_lock_tos, {goods,silver=0,gold=0,special_case=0}).
-record(m_exchange_lock_toc, {succ=true,reason,return_self=true,goods,silver=0,gold=0,special_case=0}).
-record(m_exchange_confirm_tos, {special_case=0}).
-record(m_exchange_confirm_toc, {succ=true,reason,return_self=true,goods_info,special_case=0}).
-record(p_simple_goods, {goodsid,bagid,pos}).
-record(m_exchange_cancel_tos, {src_roleid,cancel_type,special_case=0}).
-record(m_exchange_cancel_toc, {succ=true,reason,return_self=true,special_case=0}).
-record(m_exchange_npc_deal_tos, {deal_id,deal_amount=1}).
-record(m_exchange_npc_deal_toc, {succ=true,reason}).
-record(m_exchange_equip_info_tos, {chagetype,equiplist}).
-record(m_exchange_equip_info_toc, {succ=true,reason,chagetype,newgoods}).
-record(m_stall_request_tos, {name,mode,time_hour}).
-record(m_stall_request_toc, {succ=true,reason,return_self=true,stall_info,silver,bind_silver}).
-record(m_stall_open_tos, {}).
-record(m_stall_open_toc, {succ=true,reason,get_silver,tax,goods,name,remain_time,mode,state,buy_logs,chat_logs,get_gold}).
-record(m_stall_detail_tos, {role_id}).
-record(m_stall_detail_toc, {succ=true,reason,role_id,role_name,goods,mode,remain_time,name,buy_logs,chat_logs}).
-record(p_stall_goods, {goods,price,price_type,pos}).
-record(p_stall_log, {type,src_role_id,src_role_name,dest_role_id,dest_role_name,goods_info,number,price,content,time,price_type}).
-record(p_stall_list_item, {role_id,role_name,price,price_type,goods_detail}).
-record(m_stall_list_tos, {type,page,typeid,sort_type,is_reverse,is_gold_first,min_level,max_level,color,pro}).
-record(m_stall_list_toc, {succ=true,reason,type,page,typeid,sort_type,is_reverse,is_gold_first,min_level,max_level,color,pro,goods_list,max_page}).
-record(p_stall_info, {role_id,role_name,mode,name,tx,ty,goods}).
-record(m_stall_buy_tos, {role_id,goods_id,number,goods_price,buy_from}).
-record(m_stall_buy_toc, {succ=true,reason,return_self=true,role_id,role_name,goods_id,num,stall_finish=false}).
-record(m_stall_extractmoney_tos, {}).
-record(m_stall_extractmoney_toc, {succ=true,reason,silver,tax,gold}).
-record(m_stall_chat_tos, {target_role_id,content}).
-record(m_stall_chat_toc, {succ=true,reason,return_self=true,src_role_id,src_role_name,content,time}).
-record(m_stall_finish_tos, {}).
-record(m_stall_finish_toc, {succ=true,reason,return_self=true,role_id,tax,get_silver,silver,bind_silver,time_over=false,get_gold}).
-record(m_stall_employ_tos, {hour}).
-record(m_stall_employ_toc, {succ=true,reason,return_self=true,role_id,silver,bind_silver}).
-record(m_stall_search_tos, {content,type,page=1}).
-record(m_stall_search_toc, {result,total_page}).
-record(p_stall_search_goods, {goods,stall_name,role_name,pos}).
-record(m_stall_state_tos, {}).
-record(m_stall_state_toc, {stall_state}).
-record(p_role_skill, {skill_id,cur_level}).
-record(m_skill_learn_tos, {skill_id}).
-record(m_skill_learn_toc, {succ=true,reason,skill}).
-record(m_skill_getskills_tos, {}).
-record(m_skill_getskills_toc, {succ=true,reason,skills}).
-record(m_skill_reset_toc, {succ=true,reason,skill_points}).
-record(m_skill_personal_forget_tos, {skill_id}).
-record(m_skill_personal_forget_toc, {succ=true,reason,skill_id}).
-record(m_fmlskill_research_tos, {skill_id}).
-record(m_fmlskill_research_toc, {succ=true,reason,skill}).
-record(m_fmlskill_forget_tos, {skill_id}).
-record(m_fmlskill_forget_toc, {succ=true,reason,skill_id}).
-record(m_fmlskill_list_tos, {}).
-record(m_fmlskill_list_toc, {succ=true,reason,skills}).
-record(m_fmlskill_list_buff_tos, {}).
-record(m_fmlskill_list_buff_toc, {succ=true,reason,buffs,is_fetched}).
-record(m_fmlskill_fetch_buff_tos, {fml_buff_id}).
-record(m_fmlskill_fetch_buff_toc, {succ=true,reason,fml_buff_id}).
-record(m_skill_use_time_toc, {skill_time,server_time}).
-record(p_skill_time, {skill_id,last_use_time}).
-record(m_stall_putin_tos, {goods_id,price,pos,price_type}).
-record(m_stall_putin_toc, {succ=true,reason}).
-record(m_stall_getout_tos, {goods_id,bagid,pos}).
-record(m_stall_getout_toc, {succ=true,reason}).
-record(m_stall_getall_tos, {}).
-record(m_stall_getall_toc, {succ=true,reason}).
-record(m_stall_move_tos, {goodsid,pos}).
-record(m_stall_move_toc, {succ,reason}).
-record(m_refining_inbag_list_tos, {bagid}).
-record(m_refining_inbag_list_toc, {bagid,goods}).
-record(m_refining_info_tos, {id}).
-record(m_refining_info_toc, {info}).
-record(m_refining_destroy_tos, {id}).
-record(m_refining_destroy_toc, {succ=true,reason,id}).
-record(m_refining_swap_tos, {id1,position2,bagid2}).
-record(m_refining_swap_toc, {succ=true,reason,goods1,goods2}).
-record(m_refining_divide_tos, {id,num,bagposition,bagid}).
-record(m_refining_divide_toc, {succ=true,reason,goods1,goods2}).
-record(m_refining_reinforce_equip_tos, {bagid,equipid}).
-record(m_refining_reinforce_equip_toc, {succ,equip,stuff,protect,prompt}).
-record(m_refining_compose_tos, {compose_type}).
-record(m_refining_compose_toc, {succ,normal_goods,bind_goods,reason}).
-record(m_refining_punch_tos, {}).
-record(m_refining_punch_toc, {succ,reason}).
-record(m_refining_inlay_tos, {bagid,equipid}).
-record(m_refining_inlay_toc, {succ,equip,stone,symbol,reason}).
-record(m_refining_unload_tos, {bagid,equipid}).
-record(m_refining_unload_toc, {succ,equip,deplete_symbol,delete_symbol,stones,delete_stones,reason}).
-record(m_refining_equip_bind_tos, {type,bag_id,equip_id}).
-record(m_refining_equip_bind_toc, {succ,type,reason,equip_goods,bind_goods,depletion_goods}).
-record(m_refining_forging_tos, {bag_id}).
-record(m_refining_forging_toc, {succ,reason,goods_list,depletion_goods}).
-record(m_refining_firing_tos, {op_type=0,sub_op_type=0,firing_list}).
-record(m_refining_firing_toc, {succ=true,reason,reason_code=0,op_type=0,sub_op_type=0,firing_list,new_list,del_list,update_list}).
-record(m_refining_box_tos, {op_type=0,op_fee_type=0,goods_ids,page_no=0,page_type=0}).
-record(m_refining_box_toc, {succ=true,reason,reason_code=0,op_type=0,op_fee_type=0,goods_ids,page_no=0,page_type=0,is_open=true,is_free=true,award_time=0,box_list,award_list,cur_list,award_status=0,all_log_list,self_log_list,generate_type=0,total_pages=0,is_restore=0}).
-record(m_depot_get_goods_tos, {npcid,depot_id}).
-record(m_depot_get_goods_toc, {succ=true,reason,depot_num,depots}).
-record(p_depot_bag, {bagid,goods_list}).
-record(m_depot_dredge_tos, {bagid}).
-record(m_depot_dredge_toc, {succ,bagid,reason}).
-record(m_depot_destroy_tos, {id}).
-record(m_depot_destroy_toc, {succ=true,reason,id}).
-record(m_depot_swap_tos, {goodsid,position,bagid}).
-record(m_depot_swap_toc, {succ=true,reason,goods1,goods2}).
-record(m_depot_divide_tos, {id,num,bagid,position}).
-record(m_depot_divide_toc, {succ=true,reason,goods1,goods2}).
-record(m_depot_tidy_tos, {bagid}).
-record(m_depot_tidy_toc, {succ,bagid,goods_list}).
-record(m_educate_teacher_online_toc, {name}).
-record(m_educate_transfer_tos, {}).
-record(m_educate_student_online_toc, {name}).
-record(m_educate_invite_apprentice_toc, {ref,rolename}).
-record(m_educate_invite_apprentice_result_toc, {succ,reason,info}).
-record(m_educate_invite_admissions_toc, {ref,rolename}).
-record(m_educate_invite_admissions_result_toc, {succ,reason,info}).
-record(m_educate_reply_invite_apprentice_tos, {ref,is_agree}).
-record(m_educate_reply_invite_apprentice_toc, {succ,reason,info}).
-record(m_educate_reply_invite_admissions_tos, {ref,is_agree}).
-record(m_educate_reply_invite_admissions_toc, {succ,reason,info}).
-record(m_educate_sworn_mentoring_tos, {roleid}).
-record(m_educate_sworn_mentoring_toc, {succ,reason}).
-record(m_educate_filter_student_tos, {}).
-record(m_educate_filter_student_toc, {roles}).
-record(m_educate_filter_teacher_tos, {}).
-record(m_educate_filter_teacher_toc, {roles}).
-record(m_educate_get_expel_moral_value_tos, {roleid}).
-record(m_educate_get_expel_moral_value_toc, {succ,roleid,reason,value,name}).
-record(m_educate_get_dropout_moral_value_tos, {}).
-record(m_educate_get_dropout_moral_value_toc, {succ,reason,value}).
-record(m_educate_expel_tos, {roleid}).
-record(m_educate_expel_toc, {succ,roleid,info,reason,is_teacher}).
-record(m_educate_dropout_tos, {}).
-record(m_educate_dropout_toc, {succ,roleid,info,reason,is_teacher}).
-record(m_educate_graduate_to_teacher_toc, {address}).
-record(m_educate_graduate_to_student_toc, {address}).
-record(m_educate_get_clan_info_tos, {}).
-record(m_educate_get_clan_info_toc, {clans}).
-record(m_educate_get_students_info_tos, {}).
-record(m_educate_get_students_info_toc, {students}).
-record(m_educate_get_info_tos, {}).
-record(m_educate_get_info_toc, {roleinfo,reason}).
-record(m_educate_moral_value_to_exp_tos, {moral_value}).
-record(m_educate_moral_value_to_exp_toc, {succ,info,reason}).
-record(m_educate_moral_value_to_pkpoint_tos, {moral_value}).
-record(m_educate_moral_value_to_pkpoint_toc, {succ=true,moral_value,reason,pk_point}).
-record(m_educate_upgrade_tos, {}).
-record(m_educate_upgrade_toc, {succ,student_num,reason}).
-record(m_educate_tip_captain_toc, {tip}).
-record(m_educate_release_tos, {opt,msg}).
-record(m_educate_release_toc, {succ,info,reason}).
-record(p_educate_role_info, {roleid,level,sex,title,name,moral_values,student_num,student_max_num,exp_gifts1,exp_grfts2,teacher,teacher_name,exp_devote1,exp_devote2,online,apprentice_level,rel_admissions,rel_adm_msg,rel_adm_time,rel_apprentice,rel_app_msg,rel_app_time,relation}).
-record(m_educate_call_helper_toc, {message,role_id}).
-record(m_educate_agree_help_tos, {role_id}).
-record(m_educate_agree_help_toc, {again=false,message,role_id,reason}).
-record(m_educate_get_relate_people_tos, {}).
-record(m_educate_get_relate_people_toc, {educate_role_info}).
-record(m_message_error_toc, {error_msg,error_no}).
-record(p_bank_sheet, {sheet_id,roleid,price,num,type,time}).
-record(p_bank_simple_sheet, {price,num}).
-record(m_bank_init_tos, {}).
-record(m_bank_init_toc, {succ=true,bank_sell,bank_buy,self_sell,self_buy,reason}).
-record(m_bank_buy_tos, {price,num}).
-record(m_bank_buy_toc, {succ=true,reason,num,price,silver,gold,sheet}).
-record(m_bank_sell_tos, {price,num}).
-record(m_bank_sell_toc, {succ=true,reason,num,price,silver,gold,sheet}).
-record(m_bank_undo_tos, {sheet_id}).
-record(m_bank_undo_toc, {succ,reason,self_sell,self_buy,bank_sell,bank_buy,return_back}).
-record(m_bank_add_silver_toc, {silver,type,sheet_id,num,if_self}).
-record(m_bank_add_gold_toc, {gold,type,sheet_id,num,if_self}).
-record(p_shortcut, {type,id,name}).
-record(m_shortcut_init_toc, {shortcut_list,selected}).
-record(m_shortcut_update_tos, {shortcut_list,selected}).
-record(m_bubble_send_tos, {action_type,msg,to_role_id=0}).
-record(m_bubble_send_toc, {succ=true,reason}).
-record(m_bubble_msg_toc, {actor_type,actor_id,actor_name,actor_sex,actor_faction,action_type,msg,to_role_id=0,actor_head=1}).
-record(m_family_create_tos, {family_name,public_notice,private_notice,is_invite}).
-record(m_family_create_toc, {succ=true,reason,family_info,new_silver,new_silver_bind,new_gold,new_gold_bind}).
-record(m_family_introduce_tos, {}).
-record(m_family_introduce_toc, {status}).
-record(m_family_self_tos, {}).
-record(m_family_self_toc, {succ=true,reason,family_info}).
-record(m_family_panel_tos, {num_per_page}).
-record(m_family_panel_toc, {invites,family_list,requests,total_page=0}).
-record(p_family_summary, {id,name,create_role_id,create_role_name,owner_role_id,owner_role_name,cur_members,faction_id,level,active_points}).
-record(p_family_invite_info, {target_role_id,family_id,family_name,src_role_id,src_role_name}).
-record(m_family_enter_map_tos, {}).
-record(m_family_enter_map_toc, {succ=true,reason}).
-record(m_family_call_uplevelboss_tos, {}).
-record(m_family_call_uplevelboss_toc, {succ=true,reason}).
-record(m_family_call_commonboss_tos, {}).
-record(m_family_call_commonboss_toc, {succ=true,reason}).
-record(m_family_uplevel_tos, {}).
-record(m_family_uplevel_toc, {succ=true,reason,return_self=true,new_level,money,active_points}).
-record(m_family_invite_list_toc, {invite_list}).
-record(m_family_request_list_toc, {request_list}).
-record(m_family_member_join_toc, {member}).
-record(m_family_member_leave_tos, {}).
-record(m_family_member_leave_toc, {succ=true,reason,return_self=true,role_id}).
-record(m_family_list_tos, {page_id=1,num_per_page=5,search_content,search_type=1,request_from=1}).
-record(m_family_list_toc, {family_list,total_page=0,page_id,request_from=1}).
-record(m_family_request_tos, {family_id}).
-record(m_family_request_toc, {succ=true,reason,return_self=true,request,family_id}).
-record(m_family_invite_tos, {role_name}).
-record(m_family_invite_toc, {succ=true,reason,return_self=true,role_name,family_id,family_name}).
-record(m_family_cancel_invite_tos, {role_id}).
-record(m_family_cancel_invite_toc, {succ=true,reason,return_self=true,role_id}).
-record(m_family_refuse_tos, {family_id}).
-record(m_family_refuse_toc, {succ=true,reason,return_self=true,role_id,role_name}).
-record(m_family_agree_f_tos, {role_id}).
-record(m_family_agree_f_toc, {succ=true,reason,return_self=true,family_info,admit_role_id=0}).
-record(m_family_dismiss_tos, {}).
-record(m_family_dismiss_toc, {succ=true,reason,return_self=true}).
-record(m_family_set_title_tos, {role_id,title}).
-record(m_family_set_title_toc, {succ=true,reason,return_self=true,role_id,role_name,title}).
-record(m_family_set_owner_tos, {role_id}).
-record(m_family_set_owner_toc, {succ=true,reason,return_self=true,role_id}).
-record(m_family_set_second_owner_tos, {role_id}).
-record(m_family_set_second_owner_toc, {succ=true,reason,return_self=true,role_id,role_name}).
-record(m_family_unset_second_owner_tos, {role_id}).
-record(m_family_unset_second_owner_toc, {succ=true,reason,return_self=true,role_id}).
-record(m_family_update_pub_notice_tos, {content}).
-record(m_family_update_pub_notice_toc, {succ=true,reason,return_self=true,content}).
-record(m_family_update_pri_notice_tos, {content}).
-record(m_family_update_pri_notice_toc, {succ=true,reason,return_self=true,content}).
-record(m_family_update_connect_number_tos, {content,type}).
-record(m_family_update_connect_number_toc, {succ=true,reason,return_self=true,content,type}).
-record(m_family_refuse_f_tos, {role_id}).
-record(m_family_refuse_f_toc, {succ=true,reason,return_self=true,family_name}).
-record(m_family_fire_tos, {role_id}).
-record(m_family_fire_toc, {succ=true,reason,return_self=true,role_id,role_name}).
-record(m_family_agree_tos, {family_id}).
-record(m_family_agree_toc, {succ=true,reason,return_self=true,member_info,family_info}).
-record(m_family_leave_tos, {}).
-record(m_family_leave_toc, {succ=true,reason,return_self=true,role_id}).
-record(m_family_leave_map_tos, {}).
-record(m_family_leave_map_toc, {succ=true,reason}).
-record(m_family_enter_bossmap_tos, {}).
-record(m_family_enter_bossmap_toc, {succ=true,reason}).
-record(m_family_leave_bossmap_tos, {}).
-record(m_family_leave_bossmap_toc, {succ=true,reason}).
-record(m_family_role_online_toc, {role_id}).
-record(m_family_role_offline_toc, {role_id}).
-record(m_family_can_invite_tos, {}).
-record(m_family_can_invite_toc, {roles}).
-record(m_family_cancel_title_tos, {role_id}).
-record(m_family_cancel_title_toc, {succ=true,reason,role_id}).
-record(m_family_enable_map_tos, {}).
-record(m_family_enable_map_toc, {succ=true,reason,return_self=true}).
-record(m_family_del_request_toc, {role_id}).
-record(m_family_map_closed_toc, {}).
-record(p_family_request_info, {role_id,family_id}).
-record(m_family_info_change_toc, {changes}).
-record(m_family_active_points_toc, {new_points}).
-record(m_family_money_toc, {new_money}).
-record(m_family_downlevel_toc, {level,reason}).
-record(m_family_callmember_toc, {call_type=1,succ=true,reason,message}).
-record(m_family_callmember_tos, {message}).
-record(m_family_member_enter_map_toc, {succ,reason}).
-record(m_family_member_enter_map_tos, {call_type=1}).
-record(m_family_maintainfail_toc, {message,result,new_level}).
-record(m_family_activestate_toc, {succ=true,familytasklist}).
-record(m_family_activestate_tos, {family_id}).
-record(m_family_membergather_toc, {message}).
-record(m_family_gatherrequest_tos, {}).
-record(m_family_gatherrequest_toc, {succ,reason}).
-record(m_family_detail_tos, {family_id}).
-record(m_family_detail_toc, {succ=true,reason,content}).
-record(m_family_collect_begin_toc, {left_tick}).
-record(m_family_collect_info_toc, {score=0,collect_num=0,monster_kill_num=0,left_tick}).
-record(m_family_collect_prize_info_tos, {}).
-record(m_family_collect_prize_info_toc, {succ=true,reason,info}).
-record(m_family_collect_refresh_prize_tos, {}).
-record(m_family_collect_refresh_prize_toc, {succ=true,reason,info}).
-record(m_family_collect_get_prize_tos, {}).
-record(m_family_collect_get_prize_toc, {succ=true,reason,addexp}).
-record(m_family_set_bonfire_start_time_tos, {hour=0,minute=0,seconds=0}).
-record(m_family_set_bonfire_start_time_toc, {succ=true,reason,hour,minute,seconds}).
-record(m_family_get_donate_info_tos, {}).
-record(m_family_get_donate_info_toc, {succ=true,reason,reason_code,donate_gold_list,donate_silver_list}).
-record(m_family_donate_tos, {donate_type,donate_value=0}).
-record(m_family_donate_toc, {succ=true,reason,reason_code,donate_type,donate_info}).
-record(m_broadcast_general_toc, {type,sub_type,content,ext_info_list}).
-record(m_broadcast_countdown_toc, {type,sub_type,id,content,countdown_time,current_countdown_time}).
-record(m_broadcast_general_tos, {type,sub_type,content,role_list,is_world=false,country_id,famliy_id,team_id}).
-record(m_broadcast_countdown_tos, {type,sub_type,id=0,content,countdown_time,current_countdown_time,role_list,is_world=false,country_id,famliy_id,team_id}).
-record(m_broadcast_admin_tos, {id,foreign_id,type,content,send_strategy,start_date,end_date,start_time,end_time,interval=0}).
-record(m_broadcast_cycle_tos, {type,sub_type,content,send_type,start_time,end_time,interval=0,role_list,is_world=false,country_id,famliy_id,team_id}).
-record(m_broadcast_laba_tos, {content,laba_id}).
-record(m_broadcast_laba_toc, {succ=true,return_self=true,reason,content,role_id,role_name,sex,faction_id}).
-record(m_equip_build_list_tos, {build_level=1}).
-record(m_equip_build_list_toc, {succ=true,reason,build_level=1,build_list}).
-record(m_equip_build_build_tos, {build_level=1,equip_type_id,base_type_id,add_type_id=0}).
-record(m_equip_build_build_toc, {succ=true,reason,build_level=1,build_list,base_list,add_list,new_equip,base_goods,add_goods}).
-record(m_equip_build_goods_tos, {material=0}).
-record(m_equip_build_goods_toc, {succ=true,reason,material,base_list,add_list}).
-record(p_equip_build_equip, {type_id,equip_name,level,slot_num,kind,material}).
-record(p_equip_build_goods, {type_id,name,current_num,needed_num=0}).
-record(m_equip_build_quality_goods_tos, {material=0}).
-record(m_equip_build_quality_goods_toc, {succ=true,reason,material,add_list}).
-record(m_equip_build_quality_tos, {equip_id,add_type_id}).
-record(m_equip_build_quality_toc, {succ=true,reason,equip,add_list,add_goods}).
-record(m_equip_build_signature_tos, {equip_id}).
-record(m_equip_build_signature_toc, {succ=true,reason,equip}).
-record(m_equip_build_upgrade_link_tos, {equip_id,is_quality=false,is_reinforce=false,is_five_ele=false,is_bind_attr=false}).
-record(m_equip_build_upgrade_link_toc, {succ=true,reason,new_equip}).
-record(m_equip_build_upgrade_goods_tos, {material=0}).
-record(m_equip_build_upgrade_goods_toc, {succ=true,reason,material,base_list,add_list,quality_list,reinforce}).
-record(m_equip_build_upgrade_tos, {equip_id,new_type_id,base_type_id,quality_type_id=0,reinforce_type_id=0,five_ele_type_id=0,bind_attr_type_id=0}).
-record(m_equip_build_upgrade_toc, {succ=true,reason,equip,base_list,add_list,reinforce,quality_list,base_goods,quality_goods,reinforce_goods,five_ele_goods,bind_attr_goods}).
-record(m_equip_build_decompose_tos, {equip_id}).
-record(m_equip_build_decompose_toc, {succ=true,reason,base_goods,add_goods}).
-record(m_equip_build_fiveele_goods_tos, {material=0}).
-record(m_equip_build_fiveele_goods_toc, {succ=true,reason,material,five_good,add_list}).
-record(m_equip_build_fiveele_tos, {type=0,equip_id,good_type_id}).
-record(m_equip_build_fiveele_toc, {succ=true,reason,equip,five_good,add_list,used_good}).
-record(m_driver_go_tos, {id,type=1}).
-record(m_driver_go_toc, {succ,reason,type=0,id}).
-record(m_system_behavior_tos, {type}).
-record(m_system_heartbeat_tos, {time}).
-record(m_system_heartbeat_toc, {time,server_time}).
-record(m_system_fcm_toc, {info,remain_time,total_time}).
-record(m_system_need_fcm_toc, {remain_time}).
-record(m_system_set_fcm_tos, {name,card}).
-record(m_system_set_fcm_toc, {succ,reason}).
-record(m_system_error_toc, {if_close_connect=true,type='line',error_info,error_no,need_reconnect=false,key,line_info}).
-record(m_system_message_toc, {message}).
-record(m_system_config_change_tos, {sys_config}).
-record(m_system_config_change_toc, {succ=true,reason}).
-record(m_system_config_toc, {sys_config}).
-record(m_system_pk_not_agree_tos, {}).
-record(p_sys_config, {scence_vol=30,game_vol=30,back_sound=false,game_sound=false,image_quality=2,private_chat=true,nation_chat=true,family_chat=true,world_chat=true,team_chat=true,center_broadcast=true,skill_effect=true,show_cloth=true,by_find=true,show_title=true,show_family=true,show_name=true,show_faction=true,auto_fight=false,auto_use_hp=true,hp_below=50,auto_use_mp=true,mp_below=50,auto_buy=false,auto_return_home=false,auto_pick_equip=true,auto_pick_stone=true,auto_pick_drug=true,auto_pick_other=true,pick_equip_color,pick_other_color,auto_use_skill=true,skill_list,auto_search=true,auto_team=true,auto_accept=true,hook_time=60,time_level=60,show_dropgoods_name=true,show_equip_compare=true,by_hp_typeid=10200003,by_mp_typeid=10200007,other_faction=false,accept_friend_request=true,pet_auto_use_hp=true,pet_hp_below=50,pet_by_hp_typeid=12300101,pet_auto_use_skill=true,use_hp_item_type=1,use_mp_item_type=1,use_pet_item_type=1}).
-record(m_gm_complaint_tos, {type,title,content}).
-record(m_gm_complaint_toc, {succ,reason}).
-record(m_gm_score_tos, {id,fraction}).
-record(m_gm_score_toc, {succ,reason}).
-record(m_ranking_get_rank_tos, {rank_id}).
-record(m_ranking_get_rank_toc, {rank_id,rows}).
-record(m_ranking_config_toc, {rankings}).
-record(m_ranking_get_rankinfo_tos, {rank_id}).
-record(m_ranking_role_level_rank_toc, {role_level_ranks}).
-record(m_ranking_equip_join_rank_tos, {rank_id,goods_id}).
-record(m_ranking_equip_join_rank_toc, {succ=false,rank_id,reason}).
-record(m_ranking_role_pkpoint_rank_toc, {role_pkpoint_ranks}).
-record(m_ranking_role_world_pkpoint_rank_toc, {role_world_pkpoint_ranks}).
-record(m_ranking_family_active_rank_toc, {family_active_ranks}).
-record(m_ranking_family_gongxun_rank_toc, {family_gongxun_ranks}).
-record(m_ranking_equip_refining_rank_toc, {equip_refining_ranks}).
-record(m_ranking_equip_reinforce_rank_toc, {equip_reinforce_ranks}).
-record(m_ranking_equip_stone_rank_toc, {equip_stone_ranks}).
-record(m_ranking_role_gongxun_rank_toc, {role_gongxun_ranks}).
-record(m_ranking_role_today_gongxun_rank_toc, {role_gongxun_ranks}).
-record(m_ranking_role_yesterday_gongxun_rank_toc, {role_gongxun_ranks}).
-record(m_ranking_role_give_flowers_rank_toc, {role_give_flowers}).
-record(m_ranking_role_give_flowers_today_rank_toc, {role_give_flowers}).
-record(m_ranking_role_give_flowers_yesterday_rank_toc, {role_give_flowers}).
-record(m_ranking_role_give_flowers_last_week_rank_toc, {role_give_flowers}).
-record(m_ranking_role_give_flowers_this_week_rank_toc, {role_give_flowers}).
-record(m_ranking_role_rece_flowers_rank_toc, {role_rece_flowers}).
-record(m_ranking_role_rece_flowers_today_rank_toc, {role_rece_flowers}).
-record(m_ranking_role_rece_flowers_yesterday_rank_toc, {role_rece_flowers}).
-record(m_ranking_role_rece_flowers_last_week_rank_toc, {role_rece_flowers}).
-record(m_ranking_role_rece_flowers_this_week_rank_toc, {role_rece_flowers}).
-record(m_ranking_role_pet_rank_toc, {pets}).
-record(m_ranking_pet_join_rank_tos, {rank_id,pet_id}).
-record(m_ranking_pet_join_rank_toc, {succ=false,rank_id,reason}).
-record(m_ranking_hero_fb_rank_toc, {succ=true,reason,hero_fb_ranks}).
-record(m_ranking_role_all_rank_tos, {role_id}).
-record(m_ranking_role_all_rank_toc, {role_all_ranks,role_id,is_self,role_name,family_name,level}).
-record(m_warofking_hold_tos, {}).
-record(m_warofking_hold_toc, {succ=true,reason,return_self=true,role_id,family_name}).
-record(m_warofking_apply_tos, {}).
-record(m_warofking_apply_toc, {succ=true,reason}).
-record(m_warofking_collect_toc, {}).
-record(m_warofking_agree_enter_tos, {}).
-record(m_warofking_agree_enter_toc, {succ=true,reason}).
-record(m_warofking_enter_tos, {}).
-record(m_warofking_enter_toc, {succ=true,reason}).
-record(p_warofking_mark, {family_id,family_name,mark,rankno}).
-record(m_warofking_getmarks_tos, {}).
-record(m_warofking_getmarks_toc, {result}).
-record(m_warofking_break_toc, {role_id}).
-record(m_warofking_holding_toc, {role_id,time,total_time}).
-record(m_warofking_end_toc, {family_id,role_id}).
-record(m_warofking_safetime_tos, {}).
-record(m_warofking_safetime_toc, {succ=true,reason,remain_time}).
-record(m_title_get_role_titles_toc, {titles}).
-record(m_title_change_cur_title_tos, {id}).
-record(m_title_change_cur_title_toc, {succ=true,reason,color,id}).
-record(p_faction, {faction_id,office_info,succ_times_waroffaction=0,silver,persist_succ_times_waroffaction=0,fail_times_waroffaction=0,persist_fail_times_waroffaction=0,guarder_level=1,last_attack_day,last_defence_day,war_point=0,notice_content,last_launch_collection_day,king_token_used_log}).
-record(p_king_token_used_log, {king_last_used_time=0,king_used_counter=0,general_last_used_time=0,general_used_counter=0}).
-record(p_office, {faction_id,king_role_id,king_role_name,king_head=0,offices}).
-record(p_office_equip, {office_id,office_name,type=3,type_id,equip_num}).
-record(p_office_position, {office_id,office_name,role_id=0,role_name="",head=0,invite_role_id=0,invite_role_name=""}).
-record(m_office_appoint_tos, {role_name,office_id}).
-record(m_office_appoint_toc, {succ=true,reason,return_self=true,role_name,office_name,office_id}).
-record(m_office_disappoint_tos, {office_id}).
-record(m_office_disappoint_toc, {succ=true,reason,return_self=true,office_id,office_name}).
-record(m_office_agree_appoint_tos, {}).
-record(m_office_agree_appoint_toc, {succ=true,reason,return_self=true,role_name,office_name}).
-record(m_office_refuse_appoint_tos, {}).
-record(m_office_refuse_appoint_toc, {succ=true,reason,return_self=true,role_name,office_name}).
-record(m_office_cancel_appoint_tos, {office_id}).
-record(m_office_cancel_appoint_toc, {succ=true,reason,office_id}).
-record(m_office_launch_collection_tos, {}).
-record(m_office_launch_collection_toc, {succ=true,reason,role_name,office_name}).
-record(m_office_donate_tos, {money,donate_type}).
-record(m_office_donate_toc, {succ=true,reason}).
-record(m_office_panel_tos, {}).
-record(m_office_panel_toc, {faction_info}).
-record(m_office_set_notice_tos, {notice_content}).
-record(m_office_set_notice_toc, {succ=true,reason}).
-record(m_office_equip_panel_tos, {}).
-record(m_office_equip_panel_toc, {office_equip}).
-record(m_office_take_equip_tos, {take_office_id,take_num}).
-record(m_office_take_equip_toc, {succ=true,reason}).
-record(m_waroffaction_gather_factionist_toc, {message,mapid,tx,ty}).
-record(m_waroffaction_gather_confirm_tos, {mapid,tx,ty}).
-record(m_waroffaction_gather_confirm_toc, {succ=true,reason}).
-record(m_waroffaction_declare_tos, {defence_faction_id}).
-record(m_waroffaction_declare_toc, {succ=true,reason,return_self=true,attack_faction_id,defence_faction_id,role_name,silver}).
-record(m_waroffaction_tower_destroyed_toc, {attack_faction_id,defence_faction_id,attack_role_name}).
-record(m_waroffaction_general_killed_toc, {attack_faction_id,defence_faction_id,attack_role_name}).
-record(m_waroffaction_flag_destroyed_toc, {attack_faction_id,defence_faction_id,attack_role_name}).
-record(m_waroffaction_collect_toc, {}).
-record(m_waroffaction_agree_collect_tos, {}).
-record(m_waroffaction_status_tos, {}).
-record(m_waroffaction_status_toc, {succ=true,reason,type,towner_destroyed,general_killed,flag_destroyed}).
-record(m_waroffaction_warinfo_tos, {faction_id}).
-record(m_waroffaction_warinfo_toc, {faction_id,dest_faction_id,next_war_tick,is_attack_faction,declare_war1,declare_war2,silver,max_guarder_level,left_guarder_level,right_guarder_level,road_block}).
-record(m_waroffaction_record_tos, {}).
-record(m_waroffaction_record_toc, {records}).
-record(m_waroffaction_buy_guarder_tos, {guarder_type}).
-record(m_waroffaction_buy_guarder_toc, {succ,guarder_type,reason}).
-record(m_waroffaction_convene_tos, {convene_type}).
-record(m_waroffaction_convene_toc, {is_self,succ,reason,convene_id,convene_role_name,convene_title,faction_id,convene_type}).
-record(m_waroffaction_transfer_tos, {convene_id,faction_id,type}).
-record(m_waroffaction_transfer_toc, {succ,map_id,reason}).
-record(m_waroffaction_count_down_toc, {attack_faction_id,defence_faction_id,type,tick,current_target}).
-record(m_waroffaction_rank_tos, {}).
-record(m_waroffaction_rank_toc, {succ,reason,self_score,attack_faction_ranks,attack_faction_id,defence_faction_ranks,defence_faction_id}).
-record(m_trainingcamp_exchange_tos, {training_point}).
-record(m_trainingcamp_exchange_toc, {succ=true,gold,gold_bind,reason}).
-record(m_trainingcamp_start_tos, {time}).
-record(m_trainingcamp_start_toc, {succ=true,reason,last_time}).
-record(m_trainingcamp_stop_tos, {}).
-record(m_trainingcamp_stop_toc, {succ=true,training_point,exp_get,reason}).
-record(m_trainingcamp_state_tos, {}).
-record(m_trainingcamp_state_toc, {succ=true,time_total,time_expire,level_up,training_point,exp_get,reason}).
-record(m_trainingcamp_remain_point_tos, {}).
-record(m_trainingcamp_remain_point_toc, {succ=true,training_point,reason}).
-record(m_warofcity_apply_tos, {}).
-record(m_warofcity_apply_toc, {succ=true,reason}).
-record(m_warofcity_collect_toc, {map_id}).
-record(m_warofcity_agree_enter_tos, {}).
-record(m_warofcity_agree_enter_toc, {succ=true,reason}).
-record(p_warofcity_family_mark, {family_id,family_name,marks}).
-record(p_warofcity_role_mark, {role_id,role_name,family_id,family_name,marks}).
-record(m_warofcity_get_mark_tos, {}).
-record(m_warofcity_get_mark_toc, {succ=true,reason,families,roles}).
-record(m_warofcity_info_toc, {is_begin=true,remain_begin_time,remain_time,map_id}).
-record(m_warofcity_hold_tos, {}).
-record(m_warofcity_hold_toc, {succ=true,reason,return_self=true,role_id,family_name}).
-record(m_warofcity_holding_toc, {role_id,time,total_time}).
-record(p_warofcity_apply_family, {family_id,family_name}).
-record(p_warofcity, {map_id,family_id,family_name,last_day,rewards,apply_family_list,sum_apply_cost,gained_rewards}).
-record(p_warofcity_reward, {type,gain}).
-record(m_warofcity_panel_tos, {}).
-record(m_warofcity_panel_toc, {cities}).
-record(m_warofcity_get_reward_tos, {type}).
-record(m_warofcity_get_reward_toc, {succ=true,reason,type}).
-record(p_warofcity_family_winner, {family_id,family_name}).
-record(p_warofcity_role_winner, {role_id,role_name}).
-record(m_warofcity_end_toc, {first,second,third,first_role,second_role,third_role}).
-record(m_warofcity_break_toc, {}).
-record(m_warofcity_hold_succ_toc, {family_id,family_name,role_name}).
-record(m_family_memberuplevel_toc, {role_id,new_level}).
-record(m_achievement_query_tos, {op_type=0,group_id=0,achieve_ids=0}).
-record(m_achievement_query_toc, {succ=true,reason,op_type=0,group_id=0,achieve_ids=0,achievements,total_points=0,lately_achievements,stat_info,group_achievement,rank_achievements}).
-record(m_achievement_notice_tos, {event_ids,add_progress=1}).
-record(m_achievement_notice_toc, {type=0,achievements,total_points=0}).
-record(m_achievement_award_tos, {achieve_id=0}).
-record(m_achievement_award_toc, {succ=true,reason,achieve_id=0,group_id=0,class_id=0}).
-record(m_collect_get_grafts_info_tos, {id}).
-record(m_collect_get_grafts_info_toc, {succ,info,reason}).
-record(m_collect_stop_tos, {id}).
-record(m_collect_remove_grafts_toc, {grafts}).
-record(m_collect_updata_grafts_toc, {grafts}).
-record(m_collect_grafts_toc, {succ,goods_list,reason}).
-record(p_personybc_info, {color,start_time,time_limit,status,do_times,public_npc_id,commit_npc_id,desc,attr_award,prop_award,type=0,faction_new_start_time,faction_start_time=0,faction_time_limit=0,cost_type=1,cost_silver=0,cost_silver_bind=0,need_notice_when_auto=false,auto_pay_gold,auto=true}).
-record(p_personybc_award_prop, {color,prop_type,prop_num}).
-record(p_personybc_award_attr, {color,attr_type,attr_num}).
-record(m_personybc_public_tos, {type=0}).
-record(m_personybc_public_toc, {succ,reason,info}).
-record(m_personybc_auto_tos, {type=true}).
-record(m_personybc_auto_toc, {succ=true,reason}).
-record(m_personybc_set_auto_tos, {flag=true}).
-record(m_personybc_set_auto_toc, {succ=true,reason,flag}).
-record(m_personybc_cancel_tos, {}).
-record(m_personybc_cancel_toc, {succ,reason}).
-record(m_personybc_commit_tos, {}).
-record(m_personybc_commit_toc, {succ,reason,status,attr_award_list,prop_award_list}).
-record(m_personybc_info_tos, {type=0}).
-record(m_personybc_info_toc, {succ,reason,info}).
-record(m_personybc_color_change_toc, {color}).
-record(m_personybc_timer_toc, {remain_time=0}).
-record(m_personybc_faction_notice_toc, {type,last_time}).
-record(m_personybc_faction_tos, {type=0,start_h,start_m}).
-record(m_personybc_faction_toc, {succ,reason,public_role_id,public_role_name,public_office,new_start_h,new_start_m,new_start_time,today_start_time,time_limit,npc_id,map_id}).
-record(m_personybc_sos_toc, {pos,map_id,role_name}).
-record(m_personybc_auto_refresh_color_tos, {color=5,is_auto_buy=true}).
-record(m_personybc_auto_refresh_color_toc, {err_code=0,reason,item_num=0,color=1}).
-record(m_vie_world_fb_enter_tos, {npc_id,type_id}).
-record(m_vie_world_fb_enter_toc, {succ=true,reason,monster_type_ids}).
-record(m_vie_world_fb_quit_tos, {}).
-record(m_vie_world_fb_quit_toc, {succ=true,reason}).
-record(m_server_npc_enter_toc, {server_npcs}).
-record(m_server_npc_quit_toc, {npc_ids}).
-record(m_server_npc_dead_toc, {npc_id}).
-record(m_server_npc_attr_change_toc, {npc_id,change_type,value}).
-record(m_server_npc_walk_toc, {server_npc_info,pos}).
-record(m_equiponekey_list_tos, {}).
-record(m_equiponekey_list_toc, {succ=true,equips_list,reason}).
-record(m_equiponekey_info_tos, {equips_id}).
-record(m_equiponekey_info_toc, {succ=true,equips_list,reason}).
-record(m_equiponekey_save_tos, {equips_list}).
-record(m_equiponekey_save_toc, {succ=true,equips_id,equips_name,reason}).
-record(m_equiponekey_load_tos, {equips_id}).
-record(m_equiponekey_load_toc, {succ=true,reason}).
-record(m_activity_today_tos, {type=1}).
-record(m_activity_today_toc, {succ=true,reason,activity_list}).
-record(m_activity_pay_gift_info_tos, {}).
-record(m_activity_pay_gift_info_toc, {succ=true,reason,pay_first_type_id,pay_first_goods_list,has_get_pay_first_gift,accumulate_pay_goods_info,has_get_accumulate_pay_gift,happy_gift_goods_list,has_get_happy_gift}).
-record(m_activity_getgift_tos, {type,id=0}).
-record(m_activity_getgift_toc, {succ=true,reason}).
-record(m_activity_benefit_list_tos, {}).
-record(m_activity_benefit_list_toc, {succ=true,reason,is_rewarded,act_task_list,base_exp,extra_exp}).
-record(m_activity_benefit_reward_tos, {}).
-record(m_activity_benefit_reward_toc, {succ=true,reason}).
-record(m_activity_benefit_buy_tos, {act_task_id}).
-record(m_activity_benefit_buy_toc, {succ=true,reason,act_task_id}).
-record(m_newcomer_activate_code_tos, {code}).
-record(m_newcomer_activate_code_toc, {succ=true,reason}).
-record(m_trading_shop_tos, {npc_id=0,map_id=0}).
-record(m_trading_shop_toc, {succ=true,reason,shop_goods,max_buy_time=0,max_sale_time=0,role_goods,bill=0,max_bill=0,update_time=0}).
-record(m_trading_buy_tos, {npc_id=0,map_id=0,type_id=0,number=0}).
-record(m_trading_buy_toc, {succ=true,reason,shop_goods,role_goods,bill=0}).
-record(m_trading_sale_tos, {npc_id=0,map_id=0}).
-record(m_trading_sale_toc, {succ=true,reason,role_goods,bill=0}).
-record(m_trading_get_tos, {npc_id=0,map_id=0}).
-record(m_trading_get_toc, {succ=true,reason,goods,bill=0,max_bill=0,trading_times=0,award_type=0}).
-record(m_trading_return_tos, {npc_id=0,map_id=0,type=0,type_id=0}).
-record(m_trading_return_toc, {succ=true,reason,type=0,silver=0,family_money=0,family_contribution=0,trading_times=0,award_type=0}).
-record(m_trading_exchange_tos, {npc_id=0,map_id=0,family_contribution=0}).
-record(m_trading_exchange_toc, {succ=true,reason,goods,family_contribution=0}).
-record(m_trading_status_tos, {}).
-record(m_trading_status_toc, {succ=true,reason,type=0,trading_status=0,trading_times=0,base_bill=0,bill=0,start_time=0,role_goods,npc_id=0,award_type=0}).
-record(m_flowers_get_accept_list_toc, {list}).
-record(m_flowers_update_accept_toc, {info}).
-record(p_flowers_give_info, {id,give_role_id,giver,giver_sex,giver_faction,flowers_type}).
-record(m_flowers_accept_tos, {id,reply_id}).
-record(m_flowers_accept_toc, {succ,id,give_role_id}).
-record(m_flowers_give_tos, {rece_role_id,goods_id,flowers_type,is_anonymous}).
-record(m_flowers_give_toc, {succ,tips,is_buy=false}).
-record(m_flowers_get_recever_info_tos, {role_name}).
-record(m_flowers_get_recever_info_toc, {succ,reason,rolebase,roleattr}).
-record(m_flowers_give_world_broadcast_toc, {broadcast}).
-record(m_flowers_give_faction_broadcast_toc, {broadcast}).
-record(m_flowers_give_map_broadcast_toc, {broadcast}).
-record(p_flowers_give_broadcast_info, {giver,receiver,flowers_type,broadcasting}).
-record(m_plant_family_farm_toc, {farm_size,farm_list}).
-record(m_plant_update_farm_toc, {farm_info}).
-record(m_plant_assart_tos, {}).
-record(m_plant_assart_toc, {succ=true,reason,farm_id}).
-record(m_plant_sow_tos, {farm_id,seed_id}).
-record(m_plant_sow_toc, {succ=true,reason,farm_info,remain_fertilize_times}).
-record(m_plant_fertilize_tos, {farm_id}).
-record(m_plant_fertilize_toc, {succ=true,reason,farm_info,remain_fertilize_times}).
-record(m_plant_list_log_tos, {}).
-record(m_plant_list_log_toc, {succ=true,reason,logs}).
-record(m_plant_clear_log_tos, {}).
-record(m_plant_clear_log_toc, {succ=true,reason}).
-record(m_plant_harvest_tos, {farm_id}).
-record(m_plant_harvest_toc, {succ=true,reason,farm_id}).
-record(m_plant_show_skill_tos, {}).
-record(m_plant_show_skill_toc, {succ=true,reason,cur_skill_level,cur_proficiency,need_role_level,need_proficiency,need_expr,need_silver}).
-record(m_plant_upgrade_skill_tos, {}).
-record(m_plant_upgrade_skill_toc, {succ=true,reason}).
-record(m_plant_list_seeds_tos, {}).
-record(m_plant_list_seeds_toc, {succ=true,reason,seeds}).
-record(m_family_combine_panel_tos, {}).
-record(m_family_combine_panel_toc, {succ=true,reason,family_id_1,family_name_1,family_id_2,family_name_2}).
-record(m_family_combine_request_tos, {target_family_id}).
-record(m_family_combine_request_toc, {succ=true,return_self=true,reason,request_role_id}).
-record(m_family_combine_tos, {confirm=true,request_role_id}).
-record(m_family_combine_toc, {succ=true,return_self=true,reason}).
-record(m_role2_on_hook_begin_tos, {}).
-record(m_role2_on_hook_begin_toc, {succ=true,return_self=true,reason,role_id,status=false}).
-record(m_role2_on_hook_end_tos, {}).
-record(m_role2_on_hook_end_toc, {succ=true,return_self=true,reason,start_time=0,sum_exp=0,end_time=0,role_id,status=false}).
-record(m_role2_on_hook_status_tos, {}).
-record(m_role2_on_hook_status_toc, {succ=true,reason,start_time=0,sun_exp=0,add_exp=0,next_time=0}).
-record(m_time_gift_list_toc, {gift}).
-record(p_time_gift_info, {id,goods_list,time}).
-record(m_time_gift_accept_tos, {id}).
-record(m_time_gift_accept_toc, {succ,reason}).
-record(m_level_gift_list_toc, {gift}).
-record(p_level_gift_info, {id,goods_list,next_level}).
-record(m_level_gift_accept_tos, {id}).
-record(m_level_gift_accept_toc, {succ,reason,goods_list}).
-record(m_country_treasure_enter_tos, {npc_id=0,map_id=0}).
-record(m_country_treasure_enter_toc, {succ=true,reason}).
-record(m_country_treasure_quit_tos, {npc_id=0,map_id=0}).
-record(m_country_treasure_quit_toc, {succ=true,reason}).
-record(m_country_treasure_query_tos, {op_type=0}).
-record(m_country_treasure_query_toc, {succ=true,reason,reason_code=0,op_type=0,fb_start_time=0,fb_end_time=0,npc_id=0,fee=0}).
-record(m_country_treasure_points_toc, {points}).
-record(p_country_points, {faction_id,points}).
-record(m_pet_enter_toc, {pets}).
-record(m_pet_quit_toc, {pet_id}).
-record(m_pet_dead_toc, {pet_id,life}).
-record(m_pet_attr_change_toc, {pet_id,change_type,value}).
-record(m_pet_summon_tos, {pet_id}).
-record(m_pet_summon_toc, {succ=true,reason,pet_info}).
-record(m_pet_call_back_tos, {pet_id}).
-record(m_pet_call_back_toc, {succ=true,reason,pet_id}).
-record(m_pet_throw_tos, {pet_id}).
-record(m_pet_throw_toc, {succ=true,reason,bag_info}).
-record(m_pet_add_life_tos, {pet_id,add_type}).
-record(m_pet_add_life_toc, {succ=true,reason,pet_id,life}).
-record(m_pet_learn_skill_tos, {pet_id,skill_id}).
-record(m_pet_learn_skill_toc, {succ=true,reason,succ2,pet_id,skills}).
-record(m_pet_info_tos, {pet_id,role_id}).
-record(m_pet_info_toc, {succ=true,reason,pet_info}).
-record(m_pet_bag_info_tos, {}).
-record(m_pet_bag_info_toc, {info}).
-record(m_pet_add_bag_tos, {pet_id}).
-record(m_pet_add_bag_toc, {succ=true,reason,info}).
-record(m_pet_attr_assign_tos, {pet_id,assign_info}).
-record(m_pet_attr_assign_toc, {succ=true,reason,pet_info}).
-record(m_pet_level_up_toc, {pet_info}).
-record(m_pet_refresh_aptitude_tos, {pet_id,item_type,bind}).
-record(m_pet_refresh_aptitude_toc, {succ=true,reason,pet_info}).
-record(m_pet_add_understanding_tos, {pet_id,item_type,use_protect,bind}).
-record(m_pet_add_understanding_toc, {succ=true,reason,succ2,pet_info}).
-record(m_pet_change_name_tos, {pet_id,pet_name}).
-record(m_pet_change_name_toc, {succ=true,reason,pet_id,pet_name}).
-record(m_pet_feed_info_tos, {}).
-record(m_pet_feed_info_toc, {succ=true,reason,info}).
-record(m_pet_feed_begin_tos, {pet_id}).
-record(m_pet_feed_begin_toc, {succ=true,reason,info}).
-record(m_pet_feed_commit_tos, {pet_id,type}).
-record(m_pet_feed_commit_toc, {succ=true,reason,info,pet_info}).
-record(m_pet_feed_give_up_tos, {pet_id}).
-record(m_pet_feed_give_up_toc, {succ=true,reason,info}).
-record(m_pet_feed_star_up_tos, {}).
-record(m_pet_feed_star_up_toc, {succ=true,succ2=true,reason,info}).
-record(m_pet_feed_over_toc, {pet_id}).
-record(m_pet_training_request_tos, {op_type,pet_id,training_hours=0,training_mode=0}).
-record(m_pet_training_request_toc, {op_type,succ=true,reason,reason_code=0,cur_room=0,pet_training_list,pet_training_info,pet_info,add_exp=0}).
-record(m_pet_grow_info_tos, {}).
-record(m_pet_grow_info_toc, {succ=true,reason,grow_info,info_configs}).
-record(m_pet_grow_begin_tos, {grow_type}).
-record(m_pet_grow_begin_toc, {succ=true,reason,grow_info,info_configs}).
-record(m_pet_grow_commit_tos, {}).
-record(m_pet_grow_commit_toc, {succ=true,reason,use_gold,grow_info,info_configs}).
-record(m_pet_grow_give_up_tos, {}).
-record(m_pet_grow_give_up_toc, {succ=true,reason,grow_info,info_configs}).
-record(m_pet_grow_over_toc, {grow_type,grow_info,info_configs}).
-record(m_pet_add_skill_grid_tos, {pet_id}).
-record(m_pet_add_skill_grid_toc, {succ=true,reason,pet_info}).
-record(m_pet_forget_skill_tos, {pet_id,skill_id}).
-record(m_pet_forget_skill_toc, {succ=true,reason,pet_info}).
-record(m_pet_change_pos_tos, {pet_id,pos}).
-record(m_pet_change_pos_toc, {succ=true,reason,info}).
-record(m_pet_refining_tos, {pet_id}).
-record(m_pet_refining_toc, {succ=true,reason,info}).
-record(m_pet_refining_exp_tos, {pet_id}).
-record(m_pet_refining_exp_toc, {succ=true,reason,pet_id,pet_name,silver,exp,pet_color}).
-record(m_pet_egg_use_tos, {goods_id}).
-record(m_pet_egg_use_toc, {succ=true,reason,refresh_tick,type_id_list,egg_left_tick,goods_id}).
-record(m_pet_egg_refresh_tos, {goods_id}).
-record(m_pet_egg_refresh_toc, {succ=true,reason,type_id_list,egg_left_tick,goods_id}).
-record(m_pet_egg_adopt_tos, {goods_id,type_id}).
-record(m_pet_egg_adopt_toc, {succ=true,reason,type_id}).
-record(m_pet_trick_learn_tos, {type,pet_id}).
-record(m_pet_trick_learn_toc, {succ=true,reason,pet_info}).
-record(m_pet_trick_upgrade_tos, {skill_id,pet_id}).
-record(m_pet_trick_upgrade_toc, {succ=true,reason,pet_info}).
-record(m_stat_button_tos, {use_type=1,btn_key}).
-record(m_stat_config_toc, {is_open=false}).
-record(m_spy_faction_tos, {}).
-record(m_spy_faction_toc, {succ=true,reason,return_self=true,remain_time,npc_id,map_id,tx,ty,office_id,faction_id,role_name}).
-record(m_spy_faction_time_toc, {remain_time}).
-record(m_spy_time_tos, {request_type,start_hour,start_min}).
-record(m_spy_time_toc, {succ=true,reason,start_hour,start_min,can_start_now,has_publish}).
-record(m_educate_fb_enter_tos, {npc_id=0,map_id=0}).
-record(m_educate_fb_enter_toc, {succ=true,return_self=true,reason,monster_type_ids}).
-record(m_educate_fb_quit_tos, {npc_id=0,map_id=0}).
-record(m_educate_fb_quit_toc, {succ=true,reason}).
-record(m_educate_fb_award_tos, {npc_id=0,map_id=0}).
-record(m_educate_fb_award_toc, {succ=true,reason,award_goods}).
-record(m_educate_fb_gambling_tos, {npc_id=0,map_id=0}).
-record(m_educate_fb_gambling_toc, {succ=true,reason,lucky_count=0,fee=0,award_goods}).
-record(m_educate_fb_item_tos, {goods_id=0,item_id=0}).
-record(m_educate_fb_item_toc, {succ=true,reason}).
-record(m_educate_fb_query_tos, {op_type=0,goods_id=0,item_id=0,use_role_id=0}).
-record(m_educate_fb_query_toc, {succ=true,op_type=0,reason,times=0,start_time=0,end_time=0,status=0,count=0,fb_items,lucky_count=0,goods_id=0,item_id=0,use_role_id=0,use_role_name,use_tx=0,use_ty,return_self=true,all_fb_items,leader_role_id=0,max_lucky_count=0,award_goods,fb_award_config}).
-record(m_jail_out_tos, {}).
-record(m_jail_out_toc, {succ=true,reason}).
-record(m_jail_donate_tos, {gold}).
-record(m_jail_donate_toc, {succ=true,reason,pk_points,gold,gold_bind}).
-record(m_jail_out_force_tos, {}).
-record(m_jail_out_force_toc, {succ=true,reason,silver,silver_bind}).
-record(m_present_get_tos, {present_id}).
-record(m_present_get_toc, {succ=true,reason,present_id}).
-record(m_present_notify_toc, {present_list}).
-record(m_conlogin_fetch_tos, {id,num=0}).
-record(m_conlogin_fetch_toc, {succ=true,reason,id,num}).
-record(m_conlogin_info_toc, {day,next_day,notice,rewards}).
-record(m_conlogin_info_tos, {auto=true}).
-record(m_conlogin_notshow_tos, {}).
-record(m_conlogin_notshow_toc, {succ=true,reason}).
-record(m_conlogin_clear_tos, {}).
-record(m_conlogin_clear_toc, {succ=true,reason}).
-record(m_personal_fb_list_tos, {}).
-record(m_personal_fb_list_toc, {succ=true,reason,fb_info,today_count,max_times,last_fb_passed,today_lost,max_lost,exp_get}).
-record(m_personal_fb_enter_tos, {fb_id}).
-record(m_personal_fb_enter_toc, {succ=true,reason}).
-record(m_personal_fb_lost_toc, {}).
-record(m_personal_fb_quit_tos, {quit_type}).
-record(m_personal_fb_quit_toc, {succ=true,reason}).
-record(m_personal_fb_next_level_tos, {}).
-record(m_personal_fb_next_level_toc, {succ=true,reason}).
-record(m_personal_fb_state_toc, {total_monsters,killed_count,exp_get,time_used,is_boss_killed,self_best}).
-record(p_personal_fb_info, {fb_id,fb_name,state,best_time,winner_id,winner_name,winner_faction_id,best_self}).
-record(m_accumulate_exp_info_tos, {id}).
-record(m_accumulate_exp_info_toc, {succ=true,reason,info}).
-record(m_accumulate_exp_refresh_tos, {id,type}).
-record(m_accumulate_exp_refresh_toc, {succ=true,reason,result,rate,exp,gold,id,next_exp}).
-record(m_accumulate_exp_fetch_tos, {id}).
-record(m_accumulate_exp_fetch_toc, {succ=true,reason,exp,id}).
-record(m_accumulate_exp_notify_toc, {list}).
-record(m_accumulate_exp_list_tos, {}).
-record(m_accumulate_exp_list_toc, {succ=true,reason,list}).
-record(m_trap_enter_toc, {trap_list}).
-record(m_trap_quit_toc, {trap_id}).
-record(m_vip_info_toc, {succ=true,reason,vip_info}).
-record(m_vip_remote_depot_tos, {}).
-record(m_vip_remote_depot_toc, {succ=true,reason}).
-record(m_vip_active_tos, {vip_type}).
-record(m_vip_active_toc, {succ=true,reason,vip_info,gold,item}).
-record(m_vip_multi_exp_tos, {}).
-record(m_vip_multi_exp_toc, {succ=true,reason}).
-record(m_vip_stop_notify_tos, {notify_type}).
-record(m_vip_stop_notify_toc, {succ=true,reason,notify_type}).
-record(m_vip_list_tos, {page_id}).
-record(m_vip_list_toc, {succ=true,reason,vip_list,max_page}).
-record(m_vip_exchange_prestige_tos, {}).
-record(m_vip_exchange_prestige_toc, {succ=true,reason}).
-record(m_fmldepot_list_goods_tos, {}).
-record(m_fmldepot_list_goods_toc, {depots}).
-record(m_fmldepot_create_tos, {bag_id}).
-record(m_fmldepot_create_toc, {succ,reason,return_self=true,bag_id}).
-record(m_fmldepot_putin_tos, {bag_id,goods_id}).
-record(m_fmldepot_putin_toc, {succ=true,reason,add_goods}).
-record(m_fmldepot_getout_tos, {bag_id,goods_id,num}).
-record(m_fmldepot_getout_toc, {succ=true,reason,goods_id,remain_num}).
-record(m_fmldepot_update_goods_toc, {update_type,goods}).
-record(m_fmldepot_list_log_tos, {log_type,page_num=1}).
-record(m_fmldepot_list_log_toc, {succ=true,reason,log_type,log_count,page_num=1,logs}).
-record(m_scene_war_fb_enter_tos, {npc_id=0,fb_type=0,fb_level=0,fb_id=0,fb_seconds=0}).
-record(m_scene_war_fb_enter_toc, {succ=true,return_self=true,reason,reason_code=0,fb_fee=0,fb_times=0,npc_id=0,fb_type=0,fb_level=0,fb_id=0,fb_seconds=0,fb_max_times=0}).
-record(m_scene_war_fb_quit_tos, {npc_id=0}).
-record(m_scene_war_fb_quit_toc, {succ=true,reason,reason_code=0,npc_id=0,fb_type=0,fb_level=0}).
-record(m_scene_war_fb_query_tos, {op_type=0,npc_id=0}).
-record(m_scene_war_fb_query_toc, {succ=true,op_type=0,npc_id=0,reason,reason_code=0,fb_links}).
-record(m_scene_war_fb_call_monster_tos, {npc_id=0,pass_id=0}).
-record(m_scene_war_fb_call_monster_toc, {op_type=1,succ=true,reason,reason_code=0,npc_id=0,pass_id=0}).
-record(m_bgp_login_tos, {id,host,port}).
-record(m_bgp_login_toc, {id,succ=true,reason}).
-record(m_gift_item_query_tos, {}).
-record(m_gift_item_query_toc, {succ=true,reason,reason_code=0,cur_goods,award_role_level=0}).
-record(m_gift_item_award_tos, {}).
-record(m_gift_item_award_toc, {succ=true,reason,reason_code=0,award_goods,next_goods,award_role_level=0}).
-record(m_bonfire_up_toc, {bnfires}).
-record(m_bonfire_rm_toc, {id}).
-record(m_bonfire_add_fagot_tos, {bonfire_id}).
-record(m_bonfire_add_fagot_toc, {succ,bonfire,reason}).
-record(m_bonfire_get_tos, {bonfire_id}).
-record(m_bonfire_get_toc, {succ,reason,bonfire_info}).
-record(m_mission_fb_enter_tos, {barrier_id}).
-record(m_mission_fb_enter_toc, {succ=true,reason,barrier_id,error_code}).
-record(m_mission_fb_prop_tos, {barrier_id}).
-record(m_mission_fb_prop_toc, {barrier_id,succ=true,reason,prop_id}).
-record(m_mission_fb_quit_tos, {quit_type}).
-record(m_mission_fb_quit_toc, {succ=true,reason}).
-record(m_hero_fb_enter_tos, {barrier_id}).
-record(m_hero_fb_enter_toc, {succ=true,reason}).
-record(m_hero_fb_report_tos, {barrier_id}).
-record(m_hero_fb_report_toc, {succ=true,reason,barrier_id,fb_record,state=0,first_record,poker_count=0,fail_code=1}).
-record(m_hero_fb_panel_tos, {}).
-record(m_hero_fb_panel_toc, {succ=true,reason,hero_fb}).
-record(m_hero_fb_quit_tos, {quit_type}).
-record(m_hero_fb_quit_toc, {succ=true,reason}).
-record(m_hero_fb_reward_tos, {reward_id}).
-record(m_hero_fb_reward_toc, {succ=true,reason}).
-record(m_hero_fb_state_toc, {total_monsters,remain_monsters,time_used}).
-record(m_hero_fb_buy_tos, {}).
-record(m_hero_fb_buy_toc, {succ=true,reason,max_enter_times,buy_count}).
-record(m_hero_fb_poker_reward_tos, {op_type=0}).
-record(m_hero_fb_poker_reward_toc, {op_type=0,err_code=0,reason,reward_list,other_list}).
-record(m_accumulate_exp_get_tos, {}).
-record(m_accumulate_exp_get_toc, {succ=true,reason,addexp}).
-record(m_accumulate_exp_view_tos, {}).
-record(m_accumulate_exp_view_toc, {succ=true,reason,allexp,cangetexp,nextexp,gold,flag=0}).
-record(m_family_set_interior_manager_tos, {role_id}).
-record(m_family_set_interior_manager_toc, {succ=true,reason,return_self=true,role_id,role_name,oldrole_id=0,oldrole_name}).
-record(m_family_unset_interior_manager_tos, {role_id}).
-record(m_family_unset_interior_manager_toc, {succ=true,reason,return_self=true,role_id}).
-record(m_family_leftright_protector_toc, {num=2,reason,leftid,leftrole_name,rightid,rightrole_name}).
-record(m_family_collect_get_role_info_tos, {type_id,role_id}).
-record(m_family_collect_get_role_info_toc, {succ=true,reason,type_id,value}).
-record(m_family_notify_online_tos, {}).
-record(m_family_notify_online_toc, {succ=true,reason,online_list}).
-record(m_goal_info_tos, {}).
-record(m_goal_info_toc, {succ=true,reason,info}).
-record(m_goal_fetch_tos, {goal_id}).
-record(m_goal_fetch_toc, {succ=true,reason,goal_id}).
-record(m_goal_update_toc, {goal_item}).
-record(m_prestige_query_tos, {op_type=0,group_id=0,class_id=0}).
-record(m_prestige_query_toc, {op_type=0,group_id=0,class_id=0,succ=true,reason,reason_code=0,item_list}).
-record(m_prestige_deal_tos, {group_id=0,class_id=0,key=0,number=1}).
-record(m_prestige_deal_toc, {group_id=0,class_id=0,key=0,number=1,succ=true,reason,reason_code=0,consume_prestige=0,award_list,sum_prestige=0,cur_prestige=0}).
-record(m_special_activity_get_prize_tos, {activity_key,condition_id}).
-record(m_special_activity_get_prize_toc, {succ=true,reason}).
-record(m_special_activity_able_get_toc, {activity_key}).
-record(m_special_activity_list_tos, {activity_key=0}).
-record(m_special_activity_list_toc, {key_list}).
-record(m_special_activity_detail_tos, {activity_key}).
-record(m_special_activity_detail_toc, {succ=true,reason,activity_key,title,text,activity_start_time,activity_end_time,reward_start_time,reward_end_time,condition_list,limit}).
-record(m_special_activity_stat_tos, {activity_key,goods_id}).
-record(m_special_activity_stat_toc, {succ=true,reason}).
-record(m_activity_boss_group_tos, {op_type,boss_id}).
-record(m_activity_boss_group_toc, {op_type,boss_group_list,boss_id=0,map_id=0,tx=0,ty=0,succ=true,reason}).
-record(m_shuaqi_fb_request_tos, {op_type,fb_type}).
-record(m_shuaqi_fb_request_toc, {op_type,succ=true,reason,reason_code=0,fight_times,fb_type}).
-record(m_exercise_fb_request_tos, {op_type,fb_type}).
-record(m_exercise_fb_request_toc, {op_type,reason,err_code=0,fb_type,map_id=0,tx=0,ty=0,fight_times=0}).
-record(m_flash_proxy_server_tos, {servername}).
-record(m_server_disconnect_flash_toc, {reason}).
-record(m_server_update_proxy_address_config_tos, {type,servername,ip,port}).
